class GuildMember:
    def __init__(self, member: dict):
        self.uuid: str|None = member.get("uuid", None)
        self.rank: str|None = member.get("rank", None)
        self.joined: int|None = member.get("joined", None)
        self.mutedTill: int = member.get("mutedTill", None)
        self.guildExp: dict[str:int] = member.get("expHistory", {})

class GuildRank:
    def __init__(self, rank: dict):
        self.name: str|None = rank.get("name", None)
        self.default: bool = rank.get("default", False)
        self.tag: str|None = rank.get("tag", None)
        self.created: int = rank.get("created", 0)
        self.priority: int = rank.get("priority", 0)

class Guild:
    def __init__(self, guild: dict):
        self.name: str|None = guild.get("name", None)
        self.tag: str|None = guild.get("tag", None)
        self.description: str|None = guild.get("description", None)
        self.members: list[GuildMember]|list = [GuildMember(member) for member in guild.get("members", [])]
        self.ranks: list[GuildRank]|list = [GuildRank(rank) for rank in guild.get("ranks", [])]
        self.exp: int = guild.get("exp", 0)
        self.created: int = guild.get("created", 0)
        self.colour: str = guild.get("tagColor", "GRAY")

    def get_member(self, uuid) -> GuildMember:
        return [member for member in self.members if member.uuid == uuid][0]


class Player:
    def __init__(self, player: dict):
        self.uuid: str|None = player.get("uuid", None)
        self.displayName: str|None = player.get("displayname", None)
        self.playerName: str|None = player.get("playername", None)
        self.firstLogin: int = player.get("firstLogin", 0)
        self.lastLogin: int = player.get("lastLogin", 0)
        self.lastLogout: int = player.get("lastLogout", 0)
        self.networkExp: int = player.get("networkExp", 0)
        self.achievementPoints: int = player.get("achievementPoints", 0)
        self.rank: str|None = player.get("newPackageRank", None)
        self.plusColour: str|None = player.get("rankPlusColor", None)
        self.karma: int = player.get("karma", 0)
        self.socialMedia: SocialMedia = SocialMedia(player.get("socialMedia", {}))

class SocialMedia:
    def __init__(self, socialMedia: dict):
        socialMedia: dict = socialMedia.get("links", {})
        self.youtube: str|None = socialMedia.get("YOUTUBE", None)
        self.twitch: str|None = socialMedia.get("TWITCH", None)
        self.twitter: str|None = socialMedia.get("TWITTER", None)
        self.discord: str|None = socialMedia.get("DISCORD", None)
        self.hypixel: str|None = socialMedia.get("HYPIXEL", None)
        self.instagram: str|None = socialMedia.get("INSTAGRAM", None)
        self.tiktok: str|None = socialMedia.get("TIKTOK", None)

class CommunityUpgrades:
    def __init__(self, communityUpgrades: dict):
        self.currentlyUpgrading: str = communityUpgrades.get("currently_upgrading", None)
        self.upgrades: list[CommunityUpgrade] = [CommunityUpgrade(
            communityUpgrade = upgrade
            ) for upgrade in communityUpgrades.get("upgrade_states", {})]
        
class CommunityUpgrade:
    def __init__(self, communityUpgrade: dict):
        self.name: str|None = communityUpgrade.get("upgrade", None)
        self.tier: int = communityUpgrade.get("tier", 0)
        self.started: int = communityUpgrade.get("started_ms", 0)
        self.startedBy: str|None = communityUpgrade.get("started_by", None)
        self.claimed: int = communityUpgrade.get("claimed_ms", 0)
        self.claimedBy: str|None = communityUpgrade.get("claimed_by", None)
        self.fastTracked: bool = communityUpgrade.get("fasttracked", False)
    
class Pet:
    def __init__(self, pet: dict):
        self.uuid: str|None = pet.get("uuid", None)
        self.name: str|None = pet.get("type", None)
        self.exp: int = pet.get("exp", 0)
        self.active: bool = pet.get("active", False)
        self.item: str|None = pet.get("heldItem", None)
        self.candy: int = pet.get("candyUsed", 0)
        self.skin: str|None = pet.get("skin", None)
        
    
class Dungeons:
    def __init__(self, dungeons: dict):
        self.exp: int = dungeons.get("dungeon_types", {}).get("catacombs", {}).get("experience", 0)
        self.floors: Floors = Floors(dungeons.get("dungeon_types", {}))
        self.classes: DungeonClasses = DungeonClasses(dungeons.get("player_classes", {}))

class Floors:
    def __init__(self, floors: dict):
        catacombs: dict = floors.get("catacombs", {})
        masterMode: dict = floors.get("master_mode", {})
        self.floorEntrance: Floor = Floor(catacombs, floor = "0")
        self.floorOne: Floor = Floor(catacombs, floor = "1")
        self.floorTwo: Floor = Floor(catacombs, floor = "2")
        self.floorThree: Floor = Floor(catacombs, floor = "3")
        self.floorFour: Floor = Floor(catacombs, floor = "4")
        self.floorFive: Floor = Floor(catacombs, floor = "5")
        self.floorSix: Floor = Floor(catacombs, floor = "6")
        self.floorSeven: Floor = Floor(catacombs, floor = "7")
        self.masterFloorOne: Floor = Floor(masterMode, floor = "1")
        self.masterFloorTwo: Floor = Floor(masterMode, floor = "2")
        self.masterFloorThree: Floor = Floor(masterMode, floor = "3")
        self.masterFloorFour: Floor = Floor(masterMode, floor = "4")
        self.masterFloorFive: Floor = Floor(masterMode, floor = "5")
        self.masterFloorSix: Floor = Floor(masterMode, floor = "6")
        self.masterFloorSeven: Floor = Floor(masterMode, floor = "7")
    
class Floor:
    def __init__(self, data: dict, floor: int):
        self.mostTankDamage: int = data.get("most_damage_tank", {}).get(floor, "0")
        self.mostArcherDamage: int = data.get("most_damage_archer", {}).get(floor, "0")
        self.mostMageDamage: int = data.get("most_damage_mage", {}).get(floor, "0")
        self.fastestSTime: int = data.get("fastest_time_s", {}).get(floor, "0")
        self.mostHealerDamage: int = data.get("most_damage_healer", {}).get(floor, "0")
        self.mostHealing: int = data.get("most_healing", {}).get(floor, "0")
        self.Completions: int = data.get("tier_completions", {}).get(floor, "0")
        self.bestScore: int = data.get("best_score", {}).get(floor, "0")
        self.fastestTime: int = data.get("fastest_time", {}).get(floor, "0")
        self.mobsKilled: int = data.get("mobs_killed", {}).get(floor, "0")
        self.mostMobsKilled: int = data.get("most_mobs_killed", {}).get(floor, "0")
        self.mostBerserkDamage: int = data.get("most_damage_berserk", {}).get(floor, "0")
        self.fastestSPlusTime: int = data.get("fastest_time_s_plus", {}).get(floor, "0")
        self.watcherKills: int = data.get("watcher_kills", {}).get(floor, "0")
        self.timesPlayed: int = data.get("times_played", {}).get(floor, "0")
        self.milestoneCompletions: int = data.get("milestone_completions", {}).get(floor, "0")

class DungeonClasses:
    def __init__(self, dungeonClasses: dict):
        self.archer: DungeonClass = DungeonClass(dungeonClasses.get("archer", {}))
        self.berserker: DungeonClass = DungeonClass(dungeonClasses.get("berserker", {}))
        self.mage: DungeonClass = DungeonClass(dungeonClasses.get("mage", {}))
        self.healer: DungeonClass = DungeonClass(dungeonClasses.get("healer", {}))
        self.tank: DungeonClass = DungeonClass(dungeonClasses.get("tank", {}))
            
class DungeonClass:
    def __init__(self, dungeonClass: dict):
        self.exp: int = dungeonClass.get("experience", 0)

class Slayers:
    def __init__(self, slayers: dict):
        self.enderman: Slayer = Slayer(slayers.get("enderman", {}))
        self.spider: Slayer = Slayer(slayers.get("spider", {}))
        self.wolf: Slayer = Slayer(slayers.get("wolf", {}))
        self.zombie: Slayer = Slayer(slayers.get("zombie", {}))
        self.blaze: Slayer = Slayer(slayers.get("blaze", {}))
        self.vampire: Slayer = Slayer(slayers.get("vampire", {}))

class Slayer:
    def __init__(self, slayer: dict):
        self.exp: int = slayer.get("exp", 0)
        self.t1Kills: int = slayer.get("boss_kills_tier_0", 0)
        self.t2Kills: int = slayer.get("boss_kills_tier_1", 0)
        self.t3Kills: int = slayer.get("boss_kills_tier_2", 0)
        self.t4Kills: int = slayer.get("boss_kills_tier_3", 0)
        self.t5Kills: int = slayer.get("boss_kills_tier_4", 0)

class CrimsonIsles:
    def __init__(self, crimsonIsles: dict):
        self.kuudra: Kuudra = Kuudra(crimsonIsles.get("kuudra_completed_tiers", {}))
        self.dojo: Dojo = Dojo(crimsonIsles.get("dojo", {}))
        self.matriarch: Matriarch = Matriarch(crimsonIsles.get("matriarch", {}))
        self.faction: str = crimsonIsles.get("selected_faction", None)
        self.mageReputation: int = crimsonIsles.get("mages_reputation", 0)
        self.barbarianReputation: int = crimsonIsles.get("barbarians_reputation", 0)

class Kuudra:
    def __init__(self, kuudra: dict):
        self.basicCompletions: int = kuudra.get("none", 0)
        self.hotCompletions: int = kuudra.get("hot", 0)
        self.burningCompletions: int = kuudra.get("burning", 0)
        self.fieryCompletions: int = kuudra.get("fiery", 0)
        self.infernalCompletions: int = kuudra.get("infernal", 0)
        self.basicHighestWave: int = kuudra.get("highest_wave_none", 0)
        self.hotHighestWave: int = kuudra.get("highest_wave_hot", 0)
        self.burningHighestWave: int = kuudra.get("highest_wave_burning", 0)
        self.fieryHighestWave: int = kuudra.get("highest_wave_fiery", 0)
        self.infernalHighestWave: int = kuudra.get("highest_wave_infernal", 0)

class Dojo:
    def __init__(self, dojo: dict):
        self.testOfForcePoints: int = dojo.get("dojo_points_mob_kb", 0)
        self.testOfStaminaPoints: int = dojo.get("dojo_points_wall_jump", 0)
        self.testOfMasteryPoints: int = dojo.get("dojo_points_archer", 0)
        self.testOfDisciplinePoints: int = dojo.get("dojo_points_sword_swap", 0)
        self.testOfSwiftnessPoints: int = dojo.get("dojo_points_snake", 0)
        self.testOfTenacityPoints: int = dojo.get("dojo_points_fireball", 0)
        self.testOfControlPoints: int = dojo.get("dojo_points_lock_head", 0)

class Matriarch:
    def __init__(self, matriarch: dict):
        self.pearlsCollected: int = matriarch.get("pearls_collected", 0)
        self.lastAttempt: int = matriarch.get("last_attempt", 0)

class Jacob:
    def __init__(self, jacob: dict):
        self.medals: Medals = Medals(jacob.get("medals", {}))
        self.uniqueGolds: UniqueGolds = UniqueGolds(jacob.get("unique_golds2", []))
        self.anitaPerks: AnitaPerks = AnitaPerks(jacob.get("perks", {}))

class AnitaPerks:
    def __init__(self, anitaPerks: dict):
        self.doubleDrops: int = anitaPerks.get("doulbe_drops", 0)
        self.farmingLevelCap: int = anitaPerks.get("farming_level_cap", 0)

class UniqueGolds:
    def __init__(self, uniqueGolds: list):
        self.cocoaBean: bool = True if "INK_SACK:3" in uniqueGolds else False
        self.potato: bool = True if "POTATO_ITEM" in uniqueGolds else False
        self.carrot: bool = True if "CARROT_ITEM" in uniqueGolds else False
        self.cactus: bool = True if "CACTUS" in uniqueGolds else False
        self.sugarCane: bool = True if "SUGAR_CANE" in uniqueGolds else False
        self.mushroom: bool = True if "MUSHROOM_COLLECTION" in uniqueGolds else False
        self.pumpkin: bool = True if "PUMPKIN" in uniqueGolds else False
        self.netherWart: bool = True if "NETHER_STALK" in uniqueGolds else False
        self.wheat: bool = True if "WHEAT" in uniqueGolds else False
        self.melon: bool = True if "MELON" in uniqueGolds else False


class Medals:
    def __init__(self, medals: dict):
        self.bronze: int = medals.get("bronze", 0)
        self.silver: int = medals.get("silver", 0)
        self.gold: int = medals.get("gold", 0)

class Stats:
    def __init__(self, stats:dict):
        self.highestCritDamage: float = stats.get("highest_crit_damage", 0)
        self.kills: int = stats.get("kills", 0)
        self.killsCow: int = stats.get("kills_cow", 0)
        self.killsChicken: int = stats.get("kills_chicken", 0)
        self.killsPig: int = stats.get("kills_pig", 0)
        self.killsLapisZombie: int = stats.get("kills_lapis_zombie", 0)
        self.killsZombie: int = stats.get("kills_zombie", 0)
        self.deaths: int = stats.get("deaths", 0)
        self.deathsDasherSpider: int = stats.get("deaths_dasher_spider", 0)
        self.killsDasherSpider: int = stats.get("kills_dasher_spider", 0)
        self.killsRespawningSkeleton: int = stats.get("kills_respawning_skeleton", 0)
        self.killsSplitterSpider: int = stats.get("kills_splitter_spider", 0)
        self.killsZombieVillager: int = stats.get("kills_zombie_villager", 0)
        self.killsSplitterSpiderSilverfish: int = stats.get("kills_splitter_spider_silverfish", 0)
        self.highestCriticalDamage: float = stats.get("highest_critical_damage", 0)
        self.killsSheep: int = stats.get("kills_sheep", 0)
        self.killsRabbit: int = stats.get("kills_rabbit", 0)
        self.killsSkeleton: int = stats.get("kills_skeleton", 0)
        self.itemsFished: int = stats.get("items_fished", 0)
        self.itemsFishedNormal: int = stats.get("items_fished_normal", 0)
        self.foragingRaceBestTime: int = stats.get("foraging_race_best_time", 0)
        self.killsInvisibleCreeper: int = stats.get("kills_invisible_creeper", 0)
        self.killsEmeraldSlime: int = stats.get("kills_emerald_slime", 0)
        self.deathsEmeraldSlime: int = stats.get("deaths_emerald_slime", 0)
        self.deathsDiamondSkeleton: int = stats.get("deaths_diamond_skeleton", 0)
        self.killsDiamondSkeleton: int = stats.get("kills_diamond_skeleton", 0)
        self.killsDiamondZombie: int = stats.get("kills_diamond_zombie", 0)
        self.deathsDiamondZombie: int = stats.get("deaths_diamond_zombie", 0)
        self.deathsRedstonePigman: int = stats.get("deaths_redstone_pigman", 0)
        self.killsRedstonePigman: int = stats.get("kills_redstone_pigman", 0)
        self.killsMagmaCube: int = stats.get("kills_magma_cube", 0)
        self.deathsWitherSkeleton: int = stats.get("deaths_wither_skeleton", 0)
        self.killsWitherSkeleton: int = stats.get("kills_wither_skeleton", 0)
        self.deathsBlaze: int = stats.get("deaths_blaze", 0)
        self.killsBlaze: int = stats.get("kills_blaze", 0)
        self.killsSpider: int = stats.get("kills_spider", 0)
        self.killsVoraciousSpider: int = stats.get("kills_voracious_spider", 0)
        self.killsSpiderJockey: int = stats.get("kills_spider_jockey", 0)
        self.killsJockeySkeleton: int = stats.get("kills_jockey_skeleton", 0)
        self.killsWeaverSpider: int = stats.get("kills_weaver_spider", 0)
        self.killsJockeyShotSilverfish: int = stats.get("kills_jockey_shot_silverfish", 0)
        self.deathsWeaverSpider: int = stats.get("deaths_weaver_spider", 0)
        self.deathsSpider: int = stats.get("deaths_spider", 0)
        self.deathsFire: int = stats.get("deaths_fire", 0)
        self.deathsVoid: int = stats.get("deaths_void", 0)
        self.deathsZombie: int = stats.get("deaths_zombie", 0)
        self.killsEnderman: int = stats.get("kills_enderman", 0)
        self.killsWitch: int = stats.get("kills_witch", 0)
        self.deathsSkeleton: int = stats.get("deaths_skeleton", 0)
        self.auctionsBids: int = stats.get("auctions_bids", 0)
        self.auctionsHighestBid: int = stats.get("auctions_highest_bid", 0)
        self.killsFireballMagmaCube: int = stats.get("kills_fireball_magma_cube", 0)
        self.killsCaveSpider: int = stats.get("kills_cave_spider", 0)
        self.killsNightRespawningSkeleton: int = stats.get("kills_night_respawning_skeleton", 0)
        self.auctionsWon: int = stats.get("auctions_won", 0)
        self.auctionsBoughtCommon: int = stats.get("auctions_bought_common", 0)
        self.auctionsGoldSpent: int = stats.get("auctions_gold_spent", 0)
        self.auctionsCreated: int = stats.get("auctions_created", 0)
        self.auctionsFees: int = stats.get("auctions_fees", 0)
        self.auctionsCompleted: int = stats.get("auctions_completed", 0)
        self.auctionsSoldCommon: int = stats.get("auctions_sold_common", 0)
        self.auctionsGoldEarned: int = stats.get("auctions_gold_earned", 0)
        self.auctionsBoughtUncommon: int = stats.get("auctions_bought_uncommon", 0)
        self.killsUnburriedZombie: int = stats.get("kills_unburried_zombie", 0)
        self.killsPondSquid: int = stats.get("kills_pond_squid", 0)
        self.killsSeaWalker: int = stats.get("kills_sea_walker", 0)
        self.killsSeaGuardian: int = stats.get("kills_sea_guardian", 0)
        self.itemsFishedTreasure: int = stats.get("items_fished_treasure", 0)
        self.killsRandomSlime: int = stats.get("kills_random_slime", 0)
        self.deathsUnburriedZombie: int = stats.get("deaths_unburried_zombie", 0)
        self.killsBatPinata: int = stats.get("kills_bat_pinata", 0)
        self.killsPigman: int = stats.get("kills_pigman", 0)
        self.killsGhast: int = stats.get("kills_ghast", 0)
        self.killsEndermite: int = stats.get("kills_endermite", 0)
        self.endRaceBestTime: int = stats.get("end_race_best_time", 0)
        self.auctionsBoughtEpic: int = stats.get("auctions_bought_epic", 0)
        self.deathsMagmaCubeBoss: int = stats.get("deaths_magma_cube_boss", 0)
        self.itemsFishedLargeTreasure: int = stats.get("items_fished_large_treasure", 0)
        self.killsRuinWolf: int = stats.get("kills_ruin_wolf", 0)
        self.killsHowlingSpirit: int = stats.get("kills_howling_spirit", 0)
        self.deathsHowlingSpirit: int = stats.get("deaths_howling_spirit", 0)
        self.deathsFall: int = stats.get("deaths_fall", 0)
        self.deathsEnderman: int = stats.get("deaths_enderman", 0)
        self.deathsZealotEnderman: int = stats.get("deaths_zealot_enderman", 0)
        self.killsObsidianWither: int = stats.get("kills_obsidian_wither", 0)
        self.killsSeaArcher: int = stats.get("kills_sea_archer", 0)
        self.killsSeaLeech: int = stats.get("kills_sea_leech", 0)
        self.killsGuardianDefender: int = stats.get("kills_guardian_defender", 0)
        self.killsZombieDeep: int = stats.get("kills_zombie_deep", 0)
        self.auctionsNoBids: int = stats.get("auctions_no_bids", 0)
        self.auctionsSoldUncommon: int = stats.get("auctions_sold_uncommon", 0)
        self.killsZealotEnderman: int = stats.get("kills_zealot_enderman", 0)
        self.killsWatcher: int = stats.get("kills_watcher", 0)
        self.enderCrystalsDestroyed: int = stats.get("ender_crystals_destroyed", 0)
        self.auctionsSoldEpic: int = stats.get("auctions_sold_epic", 0)
        self.deathsLiquidHotMagma: int = stats.get("deaths_liquid_hot_magma", 0)
        self.giftsGiven: int = stats.get("gifts_given", 0)
        self.chickenRaceBestTime2: int = stats.get("chicken_race_best_time_2", 0)
        self.giftsReceived: int = stats.get("gifts_received", 0)
        self.auctionsSoldRare: int = stats.get("auctions_sold_rare", 0)
        self.killsMagmaCubeBoss: int = stats.get("kills_magma_cube_boss", 0)
        self.killsPackSpirit: int = stats.get("kills_pack_spirit", 0)
        self.deathsSoulOfTheAlpha: int = stats.get("deaths_soul_of_the_alpha", 0)
        self.killsLiquidHotMagma: int = stats.get("kills_liquid_hot_magma", 0)
        self.mostWinterSnowballsHit: int = stats.get("most_winter_snowballs_hit", 0)
        self.mostWinterDamageDealt: int = stats.get("most_winter_damage_dealt", 0)
        self.mostWinterMagmaDamageDealt: int = stats.get("most_winter_magma_damage_dealt", 0)
        self.killsChickenDeep: int = stats.get("kills_chicken_deep", 0)
        self.killsOldWolf: int = stats.get("kills_old_wolf", 0)
        self.deathsOldWolf: int = stats.get("deaths_old_wolf", 0)
        self.deathsWolf: int = stats.get("deaths_wolf", 0)
        self.killsNightSquid: int = stats.get("kills_night_squid", 0)
        self.killsCatfish: int = stats.get("kills_catfish", 0)
        self.auctionsBoughtRare: int = stats.get("auctions_bought_rare", 0)
        self.deathsWatcher: int = stats.get("deaths_watcher", 0)
        self.deathsProtectorDragon: int = stats.get("deaths_protector_dragon", 0)
        self.deathsStrongDragon: int = stats.get("deaths_strong_dragon", 0)
        self.deathsYoungDragon: int = stats.get("deaths_young_dragon", 0)
        self.mostWinterCannonballsHit: int = stats.get("most_winter_cannonballs_hit", 0)
        self.killsHorsemanBat: int = stats.get("kills_horseman_bat", 0)
        self.killsFrozenSteve: int = stats.get("kills_frozen_steve", 0)
        self.killsFrostyTheSnowman: int = stats.get("kills_frosty_the_snowman", 0)
        self.killsGrinch: int = stats.get("kills_grinch", 0)
        self.killsOldDragon: int = stats.get("kills_old_dragon", 0)
        self.deathsUnstableDragon: int = stats.get("deaths_unstable_dragon", 0)
        self.killsCreeper: int = stats.get("kills_creeper", 0)
        self.killsGeneratorSlime: int = stats.get("kills_generator_slime", 0)
        self.killsSlime: int = stats.get("kills_slime", 0)
        self.auctionsBoughtLegendary: int = stats.get("auctions_bought_legendary", 0)
        self.killsGeneratorGhast: int = stats.get("kills_generator_ghast", 0)
        self.killsGeneratorMagmaCube: int = stats.get("kills_generator_magma_cube", 0)
        self.killsYoungDragon: int = stats.get("kills_young_dragon", 0)
        self.killsHorsemanZombie: int = stats.get("kills_horseman_zombie", 0)
        self.deathsWiseDragon: int = stats.get("deaths_wise_dragon", 0)
        self.auctionsSoldLegendary: int = stats.get("auctions_sold_legendary", 0)
        self.killsUnstableDragon: int = stats.get("kills_unstable_dragon", 0)
        self.killsProtectorDragon: int = stats.get("kills_protector_dragon", 0)
        self.killsTarantulaSpider: int = stats.get("kills_tarantula_spider", 0)
        self.killsStrongDragon: int = stats.get("kills_strong_dragon", 0)
        self.deathsSuperiorDragon: int = stats.get("deaths_superior_dragon", 0)
        self.deathsPlayer: int = stats.get("deaths_player", 0)
        self.auctionsSoldSpecial: int = stats.get("auctions_sold_special", 0)
        self.killsSuperiorDragon: int = stats.get("kills_superior_dragon", 0)
        self.killsDeepSeaProtector: int = stats.get("kills_deep_sea_protector", 0)
        self.killsPlayer: int = stats.get("kills_player", 0)
        self.killsSkeletonEmperor: int = stats.get("kills_skeleton_emperor", 0)
        self.killsWiseDragon: int = stats.get("kills_wise_dragon", 0)
        self.killsHorsemanHorse: int = stats.get("kills_horseman_horse", 0)
        self.killsHeadlessHorseman: int = stats.get("kills_headless_horseman", 0)
        self.killsCarrotKing: int = stats.get("kills_carrot_king", 0)
        self.killsSoulOfTheAlpha: int = stats.get("kills_soul_of_the_alpha", 0)
        self.killsWaterHydra: int = stats.get("kills_water_hydra", 0)
        self.killsGuardianEmperor: int = stats.get("kills_guardian_emperor", 0)
        self.shredderFished: int = stats.get("shredder_fished", 0)
        self.shredderBait: int = stats.get("shredder_bait", 0)
        self.killsRevenantZombie: int = stats.get("kills_revenant_zombie", 0)
        self.deathsEndermite: int = stats.get("deaths_endermite", 0)
        self.deathsUnknown: int = stats.get("deaths_unknown", 0)
        self.petMilestoneSeaCreaturesKilled: int = stats.get("pet_milestone_sea_creatures_killed", 0)
        self.killsCorruptedProtector: int = stats.get("kills_corrupted_protector", 0)
        self.petMilestoneOresMined: int = stats.get("pet_milestone_ores_mined", 0)
        self.killsBroodMotherSpider: int = stats.get("kills_brood_mother_spider", 0)
        self.killsBroodMotherCaveSpider: int = stats.get("kills_brood_mother_cave_spider", 0)
        self.killsYeti: int = stats.get("kills_yeti", 0)
        self.deathsYeti: int = stats.get("deaths_yeti", 0)
        self.auctionsBoughtSpecial: int = stats.get("auctions_bought_special", 0)
        self.dungeonHubGiantMushroomAnythingNoReturnBestTime: int = stats.get("dungeon_hub_giant_mushroom_anything_no_return_best_time", 0)
        self.dungeonHubGiantMushroomNoPearlsNoReturnBestTime: int = stats.get("dungeon_hub_giant_mushroom_no_pearls_no_return_best_time", 0)
        self.dungeonHubGiantMushroomNoAbilitiesNoReturnBestTime: int = stats.get("dungeon_hub_giant_mushroom_no_abilities_no_return_best_time", 0)
        self.killsCryptTankZombie: int = stats.get("kills_crypt_tank_zombie", 0)
        self.killsScaredSkeleton: int = stats.get("kills_scared_skeleton", 0)
        self.killsDungeonRespawningSkeleton: int = stats.get("kills_dungeon_respawning_skeleton", 0)
        self.killsCryptLurker: int = stats.get("kills_crypt_lurker", 0)
        self.killsSkeletonGrunt: int = stats.get("kills_skeleton_grunt", 0)
        self.killsZombieGrunt: int = stats.get("kills_zombie_grunt", 0)
        self.killsCryptDreadlord: int = stats.get("kills_crypt_dreadlord", 0)
        self.killsLostAdventurer: int = stats.get("kills_lost_adventurer", 0)
        self.killsCryptSouleater: int = stats.get("kills_crypt_souleater", 0)
        self.killsSniperSkeleton: int = stats.get("kills_sniper_skeleton", 0)
        self.deathsSuffocation: int = stats.get("deaths_suffocation", 0)
        self.killsWatcherSummonUndead: int = stats.get("kills_watcher_summon_undead", 0)
        self.killsSkeletonSoldier: int = stats.get("kills_skeleton_soldier", 0)
        self.killsDiamondGuy: int = stats.get("kills_diamond_guy", 0)
        self.killsCryptUndead: int = stats.get("kills_crypt_undead", 0)
        self.killsBonzoSummonUndead: int = stats.get("kills_bonzo_summon_undead", 0)
        self.killsSkeletonMaster: int = stats.get("kills_skeleton_master", 0)
        self.killsLonelySpider: int = stats.get("kills_lonely_spider", 0)
        self.deathsScarfWarrior: int = stats.get("deaths_scarf_warrior", 0)
        self.killsScarfPriest: int = stats.get("kills_scarf_priest", 0)
        self.killsZombieSoldier: int = stats.get("kills_zombie_soldier", 0)
        self.deathsCryptLurker: int = stats.get("deaths_crypt_lurker", 0)
        self.killsSkeletor: int = stats.get("kills_skeletor", 0)
        self.deathsSkeletonGrunt: int = stats.get("deaths_skeleton_grunt", 0)
        self.killsZombieKnight: int = stats.get("kills_zombie_knight", 0)
        self.deathsShadowAssassin: int = stats.get("deaths_shadow_assassin", 0)
        self.killsShadowAssassin: int = stats.get("kills_shadow_assassin", 0)
        self.killsParasite: int = stats.get("kills_parasite", 0)
        self.deathsProfessorMageGuardian: int = stats.get("deaths_professor_mage_guardian", 0)
        self.deathsZombieSoldier: int = stats.get("deaths_zombie_soldier", 0)
        self.killsKingMidas: int = stats.get("kills_king_midas", 0)
        self.killsWatcherBonzo: int = stats.get("kills_watcher_bonzo", 0)
        self.deathsWatcherSummonUndead: int = stats.get("deaths_watcher_summon_undead", 0)
        self.deathsProfessor: int = stats.get("deaths_professor", 0)
        self.deathsLostAdventurer: int = stats.get("deaths_lost_adventurer", 0)
        self.killsScarfMage: int = stats.get("kills_scarf_mage", 0)
        self.killsScarfArcher: int = stats.get("kills_scarf_archer", 0)
        self.deathsSkeletor: int = stats.get("deaths_skeletor", 0)
        self.deathsTrap: int = stats.get("deaths_trap", 0)
        self.killsCellarSpider: int = stats.get("kills_cellar_spider", 0)
        self.killsProfessorGuardianSummon: int = stats.get("kills_professor_guardian_summon", 0)
        self.killsDungeonSecretBat: int = stats.get("kills_dungeon_secret_bat", 0)
        self.killsCryptUndeadBernhard: int = stats.get("kills_crypt_undead_bernhard", 0)
        self.killsCryptUndeadMarius: int = stats.get("kills_crypt_undead_marius", 0)
        self.killsCryptUndeadAlexander: int = stats.get("kills_crypt_undead_alexander", 0)
        self.deathsScarfMage: int = stats.get("deaths_scarf_mage", 0)
        self.killsCryptUndeadFriedrich: int = stats.get("kills_crypt_undead_friedrich", 0)
        self.killsScarfWarrior: int = stats.get("kills_scarf_warrior", 0)
        self.deathsKingMidas: int = stats.get("deaths_king_midas", 0)
        self.killsBlazeHigherOrLower: int = stats.get("kills_blaze_higher_or_lower", 0)
        self.deathsSkeletonSoldier: int = stats.get("deaths_skeleton_soldier", 0)
        self.deathsCryptDreadlord: int = stats.get("deaths_crypt_dreadlord", 0)
        self.deathsDiamondGuy: int = stats.get("deaths_diamond_guy", 0)
        self.deathsSkeletonMaster: int = stats.get("deaths_skeleton_master", 0)
        self.deathsWatcherBonzo: int = stats.get("deaths_watcher_bonzo", 0)
        self.deathsZombieGrunt: int = stats.get("deaths_zombie_grunt", 0)
        self.killsCryptUndeadChristian: int = stats.get("kills_crypt_undead_christian", 0)
        self.killsCryptUndeadNicholas: int = stats.get("kills_crypt_undead_nicholas", 0)
        self.deathsScarf: int = stats.get("deaths_scarf", 0)
        self.killsCryptUndeadValentin: int = stats.get("kills_crypt_undead_valentin", 0)
        self.deathsDeathmite: int = stats.get("deaths_deathmite", 0)
        self.killsCryptUndeadPieter: int = stats.get("kills_crypt_undead_pieter", 0)
        self.killsSeaWitch: int = stats.get("kills_sea_witch", 0)
        self.deathsCryptSouleater: int = stats.get("deaths_crypt_souleater", 0)
        self.killsSuperTankZombie: int = stats.get("kills_super_tank_zombie", 0)
        self.killsSpiritWolf: int = stats.get("kills_spirit_wolf", 0)
        self.killsSpiritBull: int = stats.get("kills_spirit_bull", 0)
        self.killsSpiritRabbit: int = stats.get("kills_spirit_rabbit", 0)
        self.killsSpiritMiniboss: int = stats.get("kills_spirit_miniboss", 0)
        self.killsSpiritBat: int = stats.get("kills_spirit_bat", 0)
        self.deathsSpiritBat: int = stats.get("deaths_spirit_bat", 0)
        self.killsCryptWitherskeleton: int = stats.get("kills_crypt_witherskeleton", 0)
        self.killsSuperArcher: int = stats.get("kills_super_archer", 0)
        self.deathsSpiritMiniboss: int = stats.get("deaths_spirit_miniboss", 0)
        self.deathsSpiritBull: int = stats.get("deaths_spirit_bull", 0)
        self.deathsSpiritWolf: int = stats.get("deaths_spirit_wolf", 0)
        self.deathsSpiritRabbit: int = stats.get("deaths_spirit_rabbit", 0)
        self.killsThorn: int = stats.get("kills_thorn", 0)
        self.killsWatcherScarf: int = stats.get("kills_watcher_scarf", 0)
        self.deathsSpiritChicken: int = stats.get("deaths_spirit_chicken", 0)
        self.killsSpiritChicken: int = stats.get("kills_spirit_chicken", 0)
        self.killsSpiritSheep: int = stats.get("kills_spirit_sheep", 0)
        self.killsDungeonRespawningSkeletonSkull: int = stats.get("kills_dungeon_respawning_skeleton_skull", 0)
        self.deathsCryptWitherskeleton: int = stats.get("deaths_crypt_witherskeleton", 0)
        self.deathsWatcherGuardian: int = stats.get("deaths_watcher_guardian", 0)
        self.mythosKills: int = stats.get("mythos_kills", 0)
        self.killsMinosHunter: int = stats.get("kills_minos_hunter", 0)
        self.mythosBurrowsDugNext: int = stats.get("mythos_burrows_dug_next", 0)
        self.mythosBurrowsDugNextCommon: int = stats.get("mythos_burrows_dug_next_COMMON", 0)
        self.mythosBurrowsDugCombat: int = stats.get("mythos_burrows_dug_combat", 0)
        self.mythosBurrowsDugCombatCommon: int = stats.get("mythos_burrows_dug_combat_COMMON", 0)
        self.mythosBurrowsDugTreasure: int = stats.get("mythos_burrows_dug_treasure", 0)
        self.mythosBurrowsDugTreasureCommon: int = stats.get("mythos_burrows_dug_treasure_COMMON", 0)
        self.mythosBurrowsChainsComplete: int = stats.get("mythos_burrows_chains_complete", 0)
        self.mythosBurrowsChainsCompleteCommon: int = stats.get("mythos_burrows_chains_complete_COMMON", 0)
        self.killsSiameseLynx: int = stats.get("kills_siamese_lynx", 0)
        self.mythosBurrowsDugNextNull: int = stats.get("mythos_burrows_dug_next_null", 0)
        self.mythosBurrowsDugCombatNull: int = stats.get("mythos_burrows_dug_combat_null", 0)
        self.mythosBurrowsDugTreasureNull: int = stats.get("mythos_burrows_dug_treasure_null", 0)
        self.mythosBurrowsChainsCompleteNull: int = stats.get("mythos_burrows_chains_complete_null", 0)
        self.mythosBurrowsDugNextRare: int = stats.get("mythos_burrows_dug_next_RARE", 0)
        self.mythosBurrowsDugCombatRare: int = stats.get("mythos_burrows_dug_combat_RARE", 0)
        self.killsMinotaur: int = stats.get("kills_minotaur", 0)
        self.deathsGaiaConstruct: int = stats.get("deaths_gaia_construct", 0)
        self.mythosBurrowsDugTreasureRare: int = stats.get("mythos_burrows_dug_treasure_RARE", 0)
        self.mythosBurrowsChainsCompleteRare: int = stats.get("mythos_burrows_chains_complete_RARE", 0)
        self.killsGaiaConstruct: int = stats.get("kills_gaia_construct", 0)
        self.deathsMinotaur: int = stats.get("deaths_minotaur", 0)
        self.deathsSniperSkeleton: int = stats.get("deaths_sniper_skeleton", 0)
        self.killsTigerShark: int = stats.get("kills_tiger_shark", 0)
        self.killsGreatWhiteShark: int = stats.get("kills_great_white_shark", 0)
        self.killsBlueShark: int = stats.get("kills_blue_shark", 0)
        self.killsNurseShark: int = stats.get("kills_nurse_shark", 0)
        self.deathsWatcherScarf: int = stats.get("deaths_watcher_scarf", 0)
        self.killsTentaclees: int = stats.get("kills_tentaclees", 0)
        self.deathsLividClone: int = stats.get("deaths_livid_clone", 0)
        self.deathsLivid: int = stats.get("deaths_livid", 0)
        self.deathsTentaclees: int = stats.get("deaths_tentaclees", 0)
        self.deathsSuperArcher: int = stats.get("deaths_super_archer", 0)
        self.deathsSuperTankZombie: int = stats.get("deaths_super_tank_zombie", 0)
        self.killsMimic: int = stats.get("kills_mimic", 0)
        self.killsSkeletorPrime: int = stats.get("kills_skeletor_prime", 0)
        self.deathsSadanStatue: int = stats.get("deaths_sadan_statue", 0)
        self.deathsSadanGolem: int = stats.get("deaths_sadan_golem", 0)
        self.killsSadanStatue: int = stats.get("kills_sadan_statue", 0)
        self.killsSadanGolem: int = stats.get("kills_sadan_golem", 0)
        self.killsSadanGiant: int = stats.get("kills_sadan_giant", 0)
        self.killsZombieCommander: int = stats.get("kills_zombie_commander", 0)
        self.deathsSadanGiant: int = stats.get("deaths_sadan_giant", 0)
        self.deathsSadan: int = stats.get("deaths_sadan", 0)
        self.killsWatcherLivid: int = stats.get("kills_watcher_livid", 0)
        self.deathsMimic: int = stats.get("deaths_mimic", 0)
        self.mythosBurrowsDugNextLegendary: int = stats.get("mythos_burrows_dug_next_LEGENDARY", 0)
        self.mythosBurrowsDugCombatLegendary: int = stats.get("mythos_burrows_dug_combat_LEGENDARY", 0)
        self.killsMinosChampion: int = stats.get("kills_minos_champion", 0)
        self.mythosBurrowsDugTreasureLegendary: int = stats.get("mythos_burrows_dug_treasure_LEGENDARY", 0)
        self.mythosBurrowsChainsCompleteLegendary: int = stats.get("mythos_burrows_chains_complete_LEGENDARY", 0)
        self.deathsMinosInquisitor: int = stats.get("deaths_minos_inquisitor", 0)
        self.deathsMinosChampion: int = stats.get("deaths_minos_champion", 0)
        self.killsMinosInquisitor: int = stats.get("kills_minos_inquisitor", 0)
        self.deathsSkeletorPrime: int = stats.get("deaths_skeletor_prime", 0)
        self.deathsLonelySpider: int = stats.get("deaths_lonely_spider", 0)
        self.deathsWatcherLivid: int = stats.get("deaths_watcher_livid", 0)
        self.killsWerewolf: int = stats.get("kills_werewolf", 0)
        self.killsScarecrow: int = stats.get("kills_scarecrow", 0)
        self.killsNightmare: int = stats.get("kills_nightmare", 0)
        self.killsGrimReaper: int = stats.get("kills_grim_reaper", 0)
        self.killsPhantomFisherman: int = stats.get("kills_phantom_fisherman", 0)
        self.killsWitherGourd: int = stats.get("kills_wither_gourd", 0)
        self.killsWitherMiner: int = stats.get("kills_wither_miner", 0)
        self.killsWitherGuard: int = stats.get("kills_wither_guard", 0)
        self.deathsWitherMiner: int = stats.get("deaths_wither_miner", 0)
        self.killsSkeletonLord: int = stats.get("kills_skeleton_lord", 0)
        self.killsZombieLord: int = stats.get("kills_zombie_lord", 0)
        self.deathsMaxor: int = stats.get("deaths_maxor", 0)
        self.deathsCrushed: int = stats.get("deaths_crushed", 0)
        self.killsWatcherGiantLaser: int = stats.get("kills_watcher_giant_laser", 0)
        self.killsWatcherGiantBigfoot: int = stats.get("kills_watcher_giant_bigfoot", 0)
        self.killsNecronGuard: int = stats.get("kills_necron_guard", 0)
        self.deathsZombieLord: int = stats.get("deaths_zombie_lord", 0)
        self.deathsWitherGuard: int = stats.get("deaths_wither_guard", 0)
        self.killsWatcherGiantBoulder: int = stats.get("kills_watcher_giant_boulder", 0)
        self.killsWatcherGiantDiamond: int = stats.get("kills_watcher_giant_diamond", 0)
        self.deathsSkeletonLord: int = stats.get("deaths_skeleton_lord", 0)
        self.deathsZombieCommander: int = stats.get("deaths_zombie_commander", 0)
        self.deathsWatcherGiantBigfoot: int = stats.get("deaths_watcher_giant_bigfoot", 0)
        self.deathsWatcherGiantLaser: int = stats.get("deaths_watcher_giant_laser", 0)
        self.killsMayorJerryGreen: int = stats.get("kills_mayor_jerry_green", 0)
        self.killsMayorJerryBlue: int = stats.get("kills_mayor_jerry_blue", 0)
        self.killsMayorJerryPurple: int = stats.get("kills_mayor_jerry_purple", 0)
        self.killsMayorJerryGolden: int = stats.get("kills_mayor_jerry_golden", 0)
        self.killsBattyWitch: int = stats.get("kills_batty_witch", 0)
        self.killsGoblinBattler: int = stats.get("kills_goblin_battler", 0)
        self.killsGoblinWeaklingMelee: int = stats.get("kills_goblin_weakling_melee", 0)
        self.killsGoblinGolem: int = stats.get("kills_goblin_golem", 0)
        self.killsGoblinWeaklingBow: int = stats.get("kills_goblin_weakling_bow", 0)
        self.killsGoblinCreepertamer: int = stats.get("kills_goblin_creepertamer", 0)
        self.killsCrystalSentry: int = stats.get("kills_crystal_sentry", 0)
        self.killsGoblinKnifeThrower: int = stats.get("kills_goblin_knife_thrower", 0)
        self.killsIceWalker: int = stats.get("kills_ice_walker", 0)
        self.killsTreasureHoarder: int = stats.get("kills_treasure_hoarder", 0)
        self.killsGoblinCreeper: int = stats.get("kills_goblin_creeper", 0)
        self.killsGoblinMurderlover: int = stats.get("kills_goblin_murderlover", 0)
        self.killsGoblin: int = stats.get("kills_goblin", 0)
        self.killsPowderGhast: int = stats.get("kills_powder_ghast", 0)
        self.deathsCavernsGhost: int = stats.get("deaths_caverns_ghost", 0)
        self.deathsIceWalker: int = stats.get("deaths_ice_walker", 0)
        self.killsCavernsGhost: int = stats.get("kills_caverns_ghost", 0)
        self.deathsDrowning: int = stats.get("deaths_drowning", 0)
        self.auctionsBoughtMythic: int = stats.get("auctions_bought_mythic", 0)
        self.deathsWatcherGiantDiamond: int = stats.get("deaths_watcher_giant_diamond", 0)
        self.deathsWatcherGiantBoulder: int = stats.get("deaths_watcher_giant_boulder", 0)
        self.killsMasterCryptLurker: int = stats.get("kills_master_crypt_lurker", 0)
        self.killsMasterZombieGrunt: int = stats.get("kills_master_zombie_grunt", 0)
        self.killsMasterSkeletonGrunt: int = stats.get("kills_master_skeleton_grunt", 0)
        self.killsMasterCryptDreadlord: int = stats.get("kills_master_crypt_dreadlord", 0)
        self.killsMasterScaredSkeleton: int = stats.get("kills_master_scared_skeleton", 0)
        self.killsMasterDungeonRespawningSkeleton: int = stats.get("kills_master_dungeon_respawning_skeleton", 0)
        self.killsMasterCryptTankZombie: int = stats.get("kills_master_crypt_tank_zombie", 0)
        self.killsMasterDiamondGuy: int = stats.get("kills_master_diamond_guy", 0)
        self.killsMasterSkeletonSoldier: int = stats.get("kills_master_skeleton_soldier", 0)
        self.killsMasterCryptSouleater: int = stats.get("kills_master_crypt_souleater", 0)
        self.killsMasterSniperSkeleton: int = stats.get("kills_master_sniper_skeleton", 0)
        self.killsMasterWatcherSummonUndead: int = stats.get("kills_master_watcher_summon_undead", 0)
        self.killsMasterSuperTankZombie: int = stats.get("kills_master_super_tank_zombie", 0)
        self.killsMasterZombieSoldier: int = stats.get("kills_master_zombie_soldier", 0)
        self.killsMasterSkeletonMaster: int = stats.get("kills_master_skeleton_master", 0)
        self.killsMasterTentaclees: int = stats.get("kills_master_tentaclees", 0)
        self.killsMasterSuperArcher: int = stats.get("kills_master_super_archer", 0)
        self.deathsMasterLostAdventurer: int = stats.get("deaths_master_lost_adventurer", 0)
        self.killsMasterCryptWitherskeleton: int = stats.get("kills_master_crypt_witherskeleton", 0)
        self.killsMasterSkeletor: int = stats.get("kills_master_skeletor", 0)
        self.deathsMasterLividClone: int = stats.get("deaths_master_livid_clone", 0)
        self.killsMasterLostAdventurer: int = stats.get("kills_master_lost_adventurer", 0)
        self.deathsMasterShadowAssassin: int = stats.get("deaths_master_shadow_assassin", 0)
        self.killsMasterZombieKnight: int = stats.get("kills_master_zombie_knight", 0)
        self.killsMasterParasite: int = stats.get("kills_master_parasite", 0)
        self.deathsMasterLivid: int = stats.get("deaths_master_livid", 0)
        self.killsMasterShadowAssassin: int = stats.get("kills_master_shadow_assassin", 0)
        self.killsMasterCellarSpider: int = stats.get("kills_master_cellar_spider", 0)
        self.deathsMasterWatcherScarf: int = stats.get("deaths_master_watcher_scarf", 0)
        self.deathsMasterDiamondGuy: int = stats.get("deaths_master_diamond_guy", 0)
        self.killsMasterScarfMage: int = stats.get("kills_master_scarf_mage", 0)
        self.killsMasterScarfArcher: int = stats.get("kills_master_scarf_archer", 0)
        self.deathsMasterScarf: int = stats.get("deaths_master_scarf", 0)
        self.killsMasterWatcherScarf: int = stats.get("kills_master_watcher_scarf", 0)
        self.killsMasterWatcherBonzo: int = stats.get("kills_master_watcher_bonzo", 0)
        self.deathsMasterWatcherSummonUndead: int = stats.get("deaths_master_watcher_summon_undead", 0)
        self.deathsMasterSkeletor: int = stats.get("deaths_master_skeletor", 0)
        self.killsMasterCryptUndeadFriedrich: int = stats.get("kills_master_crypt_undead_friedrich", 0)
        self.deathsMasterCryptWitherskeleton: int = stats.get("deaths_master_crypt_witherskeleton", 0)
        self.killsMasterCryptUndeadAlexander: int = stats.get("kills_master_crypt_undead_alexander", 0)
        self.deathsMasterTentaclees: int = stats.get("deaths_master_tentaclees", 0)
        self.killsMasterCryptUndeadNicholas: int = stats.get("kills_master_crypt_undead_nicholas", 0)
        self.deathsMasterCryptDreadlord: int = stats.get("deaths_master_crypt_dreadlord", 0)
        self.killsMasterLonelySpider: int = stats.get("kills_master_lonely_spider", 0)
        self.deathsMasterSkeletonSoldier: int = stats.get("deaths_master_skeleton_soldier", 0)
        self.killsMasterCryptUndead: int = stats.get("kills_master_crypt_undead", 0)
        self.killsMasterBonzoSummonUndead: int = stats.get("kills_master_bonzo_summon_undead", 0)
        self.killsMasterScarfPriest: int = stats.get("kills_master_scarf_priest", 0)
        self.killsMasterScarfWarrior: int = stats.get("kills_master_scarf_warrior", 0)
        self.deathsMasterProfessorMageGuardian: int = stats.get("deaths_master_professor_mage_guardian", 0)
        self.killsMasterProfessorGuardianSummon: int = stats.get("kills_master_professor_guardian_summon", 0)
        self.killsMasterSpiritBull: int = stats.get("kills_master_spirit_bull", 0)
        self.killsMasterSpiritRabbit: int = stats.get("kills_master_spirit_rabbit", 0)
        self.killsMasterSpiritWolf: int = stats.get("kills_master_spirit_wolf", 0)
        self.killsMasterSpiritChicken: int = stats.get("kills_master_spirit_chicken", 0)
        self.killsMasterSpiritMiniboss: int = stats.get("kills_master_spirit_miniboss", 0)
        self.killsMasterSpiritSheep: int = stats.get("kills_master_spirit_sheep", 0)
        self.deathsMasterSpiritWolf: int = stats.get("deaths_master_spirit_wolf", 0)
        self.deathsMasterWatcherBonzo: int = stats.get("deaths_master_watcher_bonzo", 0)
        self.killsMasterSpiritBat: int = stats.get("kills_master_spirit_bat", 0)
        self.deathsMasterSuperArcher: int = stats.get("deaths_master_super_archer", 0)
        self.deathsMasterSpiritSheep: int = stats.get("deaths_master_spirit_sheep", 0)
        self.killsMasterCryptUndeadPieter: int = stats.get("kills_master_crypt_undead_pieter", 0)
        self.deathsMasterSpiritRabbit: int = stats.get("deaths_master_spirit_rabbit", 0)
        self.deathsArmorStand: int = stats.get("deaths_armor_stand", 0)
        self.deathsMasterSpiritChicken: int = stats.get("deaths_master_spirit_chicken", 0)
        self.killsMasterCryptUndeadChristian: int = stats.get("kills_master_crypt_undead_christian", 0)
        self.deathsMasterCryptLurker: int = stats.get("deaths_master_crypt_lurker", 0)
        self.deathsMasterSniperSkeleton: int = stats.get("deaths_master_sniper_skeleton", 0)
        self.deathsMasterWatcherGuardian: int = stats.get("deaths_master_watcher_guardian", 0)
        self.killsMasterCryptUndeadMarius: int = stats.get("kills_master_crypt_undead_marius", 0)
        self.deathsMasterCryptUndead: int = stats.get("deaths_master_crypt_undead", 0)
        self.deathsMasterZombieSoldier: int = stats.get("deaths_master_zombie_soldier", 0)
        self.killsMasterCryptUndeadValentin: int = stats.get("kills_master_crypt_undead_valentin", 0)
        self.deathsMasterSkeletonMaster: int = stats.get("deaths_master_skeleton_master", 0)
        self.killsMasterCryptUndeadBernhard: int = stats.get("kills_master_crypt_undead_bernhard", 0)
        self.deathsMasterDungeonRespawningSkeleton: int = stats.get("deaths_master_dungeon_respawning_skeleton", 0)
        self.deathsMasterCryptSouleater: int = stats.get("deaths_master_crypt_souleater", 0)
        self.deathsMasterCryptUndeadRelenter: int = stats.get("deaths_master_crypt_undead_relenter", 0)
        self.deathsMasterCryptUndeadApunch: int = stats.get("deaths_master_crypt_undead_apunch", 0)
        self.deathsMasterCryptUndeadCodenameB: int = stats.get("deaths_master_crypt_undead_codename_b", 0)
        self.killsMasterKingMidas: int = stats.get("kills_master_king_midas", 0)
        self.killsRat: int = stats.get("kills_rat", 0)
        self.deathsMasterParasite: int = stats.get("deaths_master_parasite", 0)
        self.deathsMasterZombieKnight: int = stats.get("deaths_master_zombie_knight", 0)
        self.deathsMasterKingMidas: int = stats.get("deaths_master_king_midas", 0)
        self.killsMasterSkeletorPrime: int = stats.get("kills_master_skeletor_prime", 0)
        self.killsMasterSadanStatue: int = stats.get("kills_master_sadan_statue", 0)
        self.killsMasterSadanGolem: int = stats.get("kills_master_sadan_golem", 0)
        self.deathsMasterSadanGiant: int = stats.get("deaths_master_sadan_giant", 0)
        self.killsMasterZombieCommander: int = stats.get("kills_master_zombie_commander", 0)
        self.killsMasterWatcherLivid: int = stats.get("kills_master_watcher_livid", 0)
        self.killsMasterSadanGiant: int = stats.get("kills_master_sadan_giant", 0)
        self.deathsMasterZombieCommander: int = stats.get("deaths_master_zombie_commander", 0)
        self.killsMasterMimic: int = stats.get("kills_master_mimic", 0)
        self.deathsMasterSadanStatue: int = stats.get("deaths_master_sadan_statue", 0)
        self.deathsMasterSkeletorPrime: int = stats.get("deaths_master_skeletor_prime", 0)
        self.deathsMasterSuperTankZombie: int = stats.get("deaths_master_super_tank_zombie", 0)
        self.deathsMasterSadanGolem: int = stats.get("deaths_master_sadan_golem", 0)
        self.deathsMasterMimic: int = stats.get("deaths_master_mimic", 0)
        self.deathsMasterWatcherLivid: int = stats.get("deaths_master_watcher_livid", 0)
        self.killsMushroomCow: int = stats.get("kills_mushroom_cow", 0)
        self.killsTrapperChicken: int = stats.get("kills_trapper_chicken", 0)
        self.killsTrapperPig: int = stats.get("kills_trapper_pig", 0)
        self.killsTrapperRabbit: int = stats.get("kills_trapper_rabbit", 0)
        self.killsTrapperCow: int = stats.get("kills_trapper_cow", 0)
        self.killsTrapperSheep: int = stats.get("kills_trapper_sheep", 0)
        self.killsOasisSheep: int = stats.get("kills_oasis_sheep", 0)
        self.killsArachneBrood: int = stats.get("kills_arachne_brood", 0)
        self.killsArachne: int = stats.get("kills_arachne", 0)
        self.killsShrineChargedCreeper: int = stats.get("kills_shrine_charged_creeper", 0)
        self.killsTrickOrTreater: int = stats.get("kills_trick_or_treater", 0)
        self.killsScaryJerry: int = stats.get("kills_scary_jerry", 0)
        self.killsPhantomSpirit: int = stats.get("kills_phantom_spirit", 0)
        self.killsWraith: int = stats.get("kills_wraith", 0)
        self.killsArachneKeeper: int = stats.get("kills_arachne_keeper", 0)
        self.pumpkinLauncherCount: int = stats.get("pumpkin_launcher_count", 0)
        self.deathsMasterSadan: int = stats.get("deaths_master_sadan", 0)
        self.killsMasterDeathmite: int = stats.get("kills_master_deathmite", 0)
        self.deathsMasterCryptUndeadNitroholic: int = stats.get("deaths_master_crypt_undead_nitroholic_", 0)
        self.killsVoidlingFanatic: int = stats.get("kills_voidling_fanatic", 0)
        self.killsVoidlingExtremist: int = stats.get("kills_voidling_extremist", 0)
        self.killsVoidlingEnderman: int = stats.get("kills_voidling_enderman", 0)
        self.deathsVoidlingExtremist: int = stats.get("deaths_voidling_extremist", 0)
        self.killsSludge: int = stats.get("kills_sludge", 0)
        self.deathsKalhuikiTribeWoman: int = stats.get("deaths_kalhuiki_tribe_woman", 0)
        self.killsThyst: int = stats.get("kills_thyst", 0)
        self.killsYog: int = stats.get("kills_yog", 0)
        self.deathsYog: int = stats.get("deaths_yog", 0)
        self.killsWorm: int = stats.get("kills_worm", 0)
        self.killsAutomaton: int = stats.get("kills_automaton", 0)
        self.killsFireBat: int = stats.get("kills_fire_bat", 0)
        self.killsVittomite: int = stats.get("kills_vittomite", 0)
        self.killsTeamTreasuriteGrunt: int = stats.get("kills_team_treasurite_grunt", 0)
        self.killsTeamTreasuriteSebastian: int = stats.get("kills_team_treasurite_sebastian", 0)
        self.killsTeamTreasuriteViper: int = stats.get("kills_team_treasurite_viper", 0)
        self.killsTeamTreasuriteWendy: int = stats.get("kills_team_treasurite_wendy", 0)
        self.killsCavitak: int = stats.get("kills_cavitak", 0)
        self.killsBelle: int = stats.get("kills_belle", 0)
        self.killsSmog: int = stats.get("kills_smog", 0)
        self.killsTeamTreasuriteCorleone: int = stats.get("kills_team_treasurite_corleone", 0)
        self.killsGoblinFlamethrower: int = stats.get("kills_goblin_flamethrower", 0)
        self.killsSilvo: int = stats.get("kills_silvo", 0)
        self.deathsTeamTreasuriteViper: int = stats.get("deaths_team_treasurite_viper", 0)
        self.killsScatha: int = stats.get("kills_scatha", 0)
        self.killsButterfly: int = stats.get("kills_butterfly", 0)
        self.killsTrappedSludge: int = stats.get("kills_trapped_sludge", 0)
        self.killsKalhuikiTribeWoman: int = stats.get("kills_kalhuiki_tribe_woman", 0)
        self.deathsKalhuikiTribeMan: int = stats.get("deaths_kalhuiki_tribe_man", 0)
        self.auctionsSoldMythic: int = stats.get("auctions_sold_mythic", 0)
        self.deathsMasterCryptUndeadDctr: int = stats.get("deaths_master_crypt_undead_dctr", 0)
        self.deathsMasterLonelySpider: int = stats.get("deaths_master_lonely_spider", 0)
        self.killsFlamingWorm: int = stats.get("kills_flaming_worm", 0)
        self.killsKeyGuardian: int = stats.get("kills_key_guardian", 0)
        self.deathsArachne: int = stats.get("deaths_arachne", 0)
        self.deathsArachneBrood: int = stats.get("deaths_arachne_brood", 0)
        self.dungeonHubGiantMushroomNothingNoReturnBestTime: int = stats.get("dungeon_hub_giant_mushroom_nothing_no_return_best_time", 0)
        self.dungeonHubCrystalCoreAnythingNoReturnBestTime: int = stats.get("dungeon_hub_crystal_core_anything_no_return_best_time", 0)
        self.dungeonHubCrystalCoreNoPearlsNoReturnBestTime: int = stats.get("dungeon_hub_crystal_core_no_pearls_no_return_best_time", 0)
        self.dungeonHubCrystalCoreNoAbilitiesNoReturnBestTime: int = stats.get("dungeon_hub_crystal_core_no_abilities_no_return_best_time", 0)
        self.dungeonHubCrystalCoreNothingNoReturnBestTime: int = stats.get("dungeon_hub_crystal_core_nothing_no_return_best_time", 0)
        self.dungeonHubPrecursorRuinsAnythingNoReturnBestTime: int = stats.get("dungeon_hub_precursor_ruins_anything_no_return_best_time", 0)
        self.dungeonHubPrecursorRuinsNoPearlsNoReturnBestTime: int = stats.get("dungeon_hub_precursor_ruins_no_pearls_no_return_best_time", 0)
        self.dungeonHubPrecursorRuinsNoAbilitiesNoReturnBestTime: int = stats.get("dungeon_hub_precursor_ruins_no_abilities_no_return_best_time", 0)
        self.dungeonHubPrecursorRuinsNothingNoReturnBestTime: int = stats.get("dungeon_hub_precursor_ruins_nothing_no_return_best_time", 0)
        self.dungeonHubCrystalCoreAnythingWithReturnBestTime: int = stats.get("dungeon_hub_crystal_core_anything_with_return_best_time", 0)
        self.dungeonHubCrystalCoreNoPearlsWithReturnBestTime: int = stats.get("dungeon_hub_crystal_core_no_pearls_with_return_best_time", 0)
        self.dungeonHubCrystalCoreNoAbilitiesWithReturnBestTime: int = stats.get("dungeon_hub_crystal_core_no_abilities_with_return_best_time", 0)
        self.dungeonHubCrystalCoreNothingWithReturnBestTime: int = stats.get("dungeon_hub_crystal_core_nothing_with_return_best_time", 0)
        self.dungeonHubGiantMushroomAnythingWithReturnBestTime: int = stats.get("dungeon_hub_giant_mushroom_anything_with_return_best_time", 0)
        self.dungeonHubGiantMushroomNoPearlsWithReturnBestTime: int = stats.get("dungeon_hub_giant_mushroom_no_pearls_with_return_best_time", 0)
        self.dungeonHubGiantMushroomNoAbilitiesWithReturnBestTime: int = stats.get("dungeon_hub_giant_mushroom_no_abilities_with_return_best_time", 0)
        self.dungeonHubGiantMushroomNothingWithReturnBestTime: int = stats.get("dungeon_hub_giant_mushroom_nothing_with_return_best_time", 0)
        self.dungeonHubPrecursorRuinsAnythingWithReturnBestTime: int = stats.get("dungeon_hub_precursor_ruins_anything_with_return_best_time", 0)
        self.dungeonHubPrecursorRuinsNoPearlsWithReturnBestTime: int = stats.get("dungeon_hub_precursor_ruins_no_pearls_with_return_best_time", 0)
        self.dungeonHubPrecursorRuinsNoAbilitiesWithReturnBestTime: int = stats.get("dungeon_hub_precursor_ruins_no_abilities_with_return_best_time", 0)
        self.dungeonHubPrecursorRuinsNothingWithReturnBestTime: int = stats.get("dungeon_hub_precursor_ruins_nothing_with_return_best_time", 0)
        self.deathsMasterProfessor: int = stats.get("deaths_master_professor", 0)
        self.killsKalhuikiYoungling: int = stats.get("kills_kalhuiki_youngling", 0)
        self.killsForestIslandBat: int = stats.get("kills_forest_island_bat", 0)
        self.highestDamage: float = stats.get("highest_damage", 0)
        self.totalPetExpGained: float = stats.get("total_pet_exp_gained", 0)
        self.deathsGoblinMurderlover: int = stats.get("deaths_goblin_murderlover", 0)
        self.deathsMasterDeathmite: int = stats.get("deaths_master_deathmite", 0)
        self.deathsEntity: int = stats.get("deaths_entity", 0)
        self.seaCreatureKills: int = stats.get("sea_creature_kills", 0)
        self.killsZombieMiner: int = stats.get("kills_zombie_miner", 0)
        self.killsWaterWorm: int = stats.get("kills_water_worm", 0)
        self.killsPoisonedWaterWorm: int = stats.get("kills_poisoned_water_worm", 0)
        self.deathsStorm: int = stats.get("deaths_storm", 0)
        self.deathsGoldor: int = stats.get("deaths_goldor", 0)
        self.deathsNecron: int = stats.get("deaths_necron", 0)
        self.killsMasterZombieLord: int = stats.get("kills_master_zombie_lord", 0)
        self.killsMasterWatcherGiantDiamond: int = stats.get("kills_master_watcher_giant_diamond", 0)
        self.deathsMasterWatcherGiantDiamond: int = stats.get("deaths_master_watcher_giant_diamond", 0)
        self.killsMasterWitherMiner: int = stats.get("kills_master_wither_miner", 0)
        self.deathsMasterWitherMiner: int = stats.get("deaths_master_wither_miner", 0)
        self.killsMasterWitherGuard: int = stats.get("kills_master_wither_guard", 0)
        self.deathsMasterMaxor: int = stats.get("deaths_master_maxor", 0)
        self.deathsMasterStorm: int = stats.get("deaths_master_storm", 0)
        self.killsMasterSkeletonLord: int = stats.get("kills_master_skeleton_lord", 0)
        self.killsMasterWatcherGiantBoulder: int = stats.get("kills_master_watcher_giant_boulder", 0)
        self.killsMasterWatcherGiantBigfoot: int = stats.get("kills_master_watcher_giant_bigfoot", 0)
        self.deathsMasterGoldor: int = stats.get("deaths_master_goldor", 0)
        self.killsMasterWitherHusk: int = stats.get("kills_master_wither_husk", 0)
        self.killsMasterWitherKingDragon: int = stats.get("kills_master_wither_king_dragon", 0)
        self.killsMasterNecronGuard: int = stats.get("kills_master_necron_guard", 0)
        self.killsMasterWatcherGiantLaser: int = stats.get("kills_master_watcher_giant_laser", 0)
        self.deathsMasterWitherKingDragon: int = stats.get("deaths_master_wither_king_dragon", 0)
        self.deathsMasterWitherKing: int = stats.get("deaths_master_wither_king", 0)
        self.deathsMasterWitherHusk: int = stats.get("deaths_master_wither_husk", 0)
        self.deathsMasterWatcherGiantBigfoot: int = stats.get("deaths_master_watcher_giant_bigfoot", 0)
        self.deathsMasterWitherGuard: int = stats.get("deaths_master_wither_guard", 0)
        self.deathsMasterNecron: int = stats.get("deaths_master_necron", 0)
        self.deathsMasterWatcherGiantLaser: int = stats.get("deaths_master_watcher_giant_laser", 0)
        self.deathsMasterSkeletonLord: int = stats.get("deaths_master_skeleton_lord", 0)
        self.killsIntroBlaze: int = stats.get("kills_intro_blaze", 0)
        self.killsWitherSpectre: int = stats.get("kills_wither_spectre", 0)
        self.killsMutatedBlaze: int = stats.get("kills_mutated_blaze", 0)
        self.killsBezal: int = stats.get("kills_bezal", 0)
        self.killsChargingMushroomCow: int = stats.get("kills_charging_mushroom_cow", 0)
        self.killsMagmaCubeRider: int = stats.get("kills_magma_cube_rider", 0)
        self.killsFlamingSpider: int = stats.get("kills_flaming_spider", 0)
        self.killsSmolderingBlaze: int = stats.get("kills_smoldering_blaze", 0)
        self.killsOldBlaze: int = stats.get("kills_old_blaze", 0)
        self.killsVanquisher: int = stats.get("kills_vanquisher", 0)
        self.deathsOldBlaze: int = stats.get("deaths_old_blaze", 0)
        self.deathsSmolderingBlaze: int = stats.get("deaths_smoldering_blaze", 0)
        self.deathsBladesoul: int = stats.get("deaths_bladesoul", 0)
        self.killsBladesoul: int = stats.get("kills_bladesoul", 0)
        self.killsLavaLeech: int = stats.get("kills_lava_leech", 0)
        self.killsMagmaSlug: int = stats.get("kills_magma_slug", 0)
        self.killsBabyMagmaSlug: int = stats.get("kills_baby_magma_slug", 0)
        self.killsPigRider: int = stats.get("kills_pig_rider", 0)
        self.deathsPigZombie: int = stats.get("deaths_pig_zombie", 0)
        self.killsDojoKnockbackZombie: int = stats.get("kills_dojo_knockback_zombie", 0)
        self.killsDiveGhast: int = stats.get("kills_dive_ghast", 0)
        self.killsInfernoBlaze: int = stats.get("kills_inferno_blaze", 0)
        self.deathsMageOutlaw: int = stats.get("deaths_mage_outlaw", 0)
        self.killsMagmaGlare: int = stats.get("kills_magma_glare", 0)
        self.killsUnstableMagma: int = stats.get("kills_unstable_magma", 0)
        self.deathsBarbarianDukeX: int = stats.get("deaths_barbarian_duke_x", 0)
        self.killsMageSkull: int = stats.get("kills_mage_skull", 0)
        self.deathsMagmaGlare: int = stats.get("deaths_magma_glare", 0)
        self.killsMagmaBoss: int = stats.get("kills_magma_boss", 0)
        self.killsMageOutlaw: int = stats.get("kills_mage_outlaw", 0)
        self.killsBarbarianDukeX: int = stats.get("kills_barbarian_duke_x", 0)
        self.killsAshfangBlueBlaze: int = stats.get("kills_ashfang_blue_blaze", 0)
        self.killsAshfangRedBlaze: int = stats.get("kills_ashfang_red_blaze", 0)
        self.deathsAshfang: int = stats.get("deaths_ashfang", 0)
        self.deathsHellwisp: int = stats.get("deaths_hellwisp", 0)
        self.killsWitherDefenderGuard: int = stats.get("kills_wither_defender_guard", 0)
        self.killsDuelistRollim: int = stats.get("kills_duelist_rollim", 0)
        self.killsFireEel: int = stats.get("kills_fire_eel", 0)
        self.killsMoogma: int = stats.get("kills_moogma", 0)
        self.itemsFishedTrophyFish: int = stats.get("items_fished_trophy_fish", 0)
        self.killsPyroclasticWorm: int = stats.get("kills_pyroclastic_worm", 0)
        self.killsLavaFlame: int = stats.get("kills_lava_flame", 0)
        self.deathsLordJawbus: int = stats.get("deaths_lord_jawbus", 0)
        self.deathsPyroclasticWorm: int = stats.get("deaths_pyroclastic_worm", 0)
        self.deathsLavaLeech: int = stats.get("deaths_lava_leech", 0)
        self.deathsMagmaSlug: int = stats.get("deaths_magma_slug", 0)
        self.deathsKuudraFollower: int = stats.get("deaths_kuudra_follower", 0)
        self.deathsAshfangBlueBlaze: int = stats.get("deaths_ashfang_blue_blaze", 0)
        self.killsKuudra: int = stats.get("kills_kuudra", 0)
        self.killsBarbariansGuard: int = stats.get("kills_barbarians_guard", 0)
        self.deathsWanderingBlaze: int = stats.get("deaths_wandering_blaze", 0)
        self.deathsAshfangGrayBlaze: int = stats.get("deaths_ashfang_gray_blaze", 0)
        self.killsAshfang: int = stats.get("kills_ashfang", 0)
        self.killsThunder: int = stats.get("kills_thunder", 0)
        self.deathsThunder: int = stats.get("deaths_thunder", 0)
        self.killsKadaKnight: int = stats.get("kills_kada_knight", 0)
        self.killsPackMagmaCube: int = stats.get("kills_pack_magma_cube", 0)
        self.killsLordJawbus: int = stats.get("kills_lord_jawbus", 0)
        self.killsHellwisp: int = stats.get("kills_hellwisp", 0)
        self.deathsKuudraKnocker: int = stats.get("deaths_kuudra_knocker", 0)
        self.deathsChargingMushroomCow: int = stats.get("deaths_charging_mushroom_cow", 0)
        self.deathsExplosiveImp: int = stats.get("deaths_explosive_imp", 0)
        self.deathsBabyMagmaSlug: int = stats.get("deaths_baby_magma_slug", 0)
        self.deathsKuudraLandmine: int = stats.get("deaths_kuudra_landmine", 0)
        self.deathsMagmaBoss: int = stats.get("deaths_magma_boss", 0)
        self.killsMatcho: int = stats.get("kills_matcho", 0)
        self.killsLavaPigman: int = stats.get("kills_lava_pigman", 0)
        self.killsLavaBlaze: int = stats.get("kills_lava_blaze", 0)
        self.killsBarbarian: int = stats.get("kills_barbarian", 0)
        self.deathsBarbariansGuard: int = stats.get("deaths_barbarians_guard", 0)
        self.killsFireMage: int = stats.get("kills_fire_mage", 0)
        self.killsFlare: int = stats.get("kills_flare", 0)
        self.deathsFlare: int = stats.get("deaths_flare", 0)
        self.deathsFireballMagmaCube: int = stats.get("deaths_fireball_magma_cube", 0)
        self.deathsAshfangRedBlaze: int = stats.get("deaths_ashfang_red_blaze", 0)
        self.deathsDiveGhast: int = stats.get("deaths_dive_ghast", 0)
        self.killsTaurus: int = stats.get("kills_taurus", 0)
        self.killsChickzilla: int = stats.get("kills_chickzilla", 0)
        self.killsMasterSadan: int = stats.get("kills_master_sadan", 0)
        self.deathsUnstableMagma: int = stats.get("deaths_unstable_magma", 0)
        self.killsKrondorNecromancer: int = stats.get("kills_krondor_necromancer", 0)
        self.killsDuelistKaus: int = stats.get("kills_duelist_kaus", 0)
        self.deathsWitherDefenderGuard: int = stats.get("deaths_wither_defender_guard", 0)
        self.killsMagesGuard: int = stats.get("kills_mages_guard", 0)
        self.killsCinderBat: int = stats.get("kills_cinder_bat", 0)
        self.deathsMatcho: int = stats.get("deaths_matcho", 0)
        self.deathsMagmaCube: int = stats.get("deaths_magma_cube", 0)
        self.killsLivid: int = stats.get("kills_livid", 0)
        self.killsLividClone: int = stats.get("kills_livid_clone", 0)
        self.deathsMoogma: int = stats.get("deaths_moogma", 0)
        self.deathsMagesGuard: int = stats.get("deaths_mages_guard", 0)
        self.deathsGoliathBarbarian: int = stats.get("deaths_goliath_barbarian", 0)
        self.deathsScaryJerry: int = stats.get("deaths_scary_jerry", 0)
        self.deathsVanquisher: int = stats.get("deaths_vanquisher", 0)
        self.deathsInfernoBlaze: int = stats.get("deaths_inferno_blaze", 0)
        self.deathsFireEel: int = stats.get("deaths_fire_eel", 0)
        self.killsGoliathBarbarian: int = stats.get("kills_goliath_barbarian", 0)
        self.killsNestEndermite: int = stats.get("kills_nest_endermite", 0)
        self.summoningEyesCollected: int = stats.get("summoning_eyes_collected", 0)
        self.dragonMostDamage: float = stats.get("dragon_most_damage", 0)
        self.dragonMostDamageOld: float = stats.get("dragon_most_damage_old", 0)
        self.dragonFastestKill: int = stats.get("dragon_fastest_kill", 0)
        self.dragonFastestKillOld: int = stats.get("dragon_fastest_kill_old", 0)
        self.deathsBlight: int = stats.get("deaths_blight", 0)
        self.deathsKuudraBerserker: int = stats.get("deaths_kuudra_berserker", 0)
        self.deathsGiant: int = stats.get("deaths_giant", 0)
        self.dragonMostDamageProtector: float = stats.get("dragon_most_damage_protector", 0)
        self.dragonFastestKillProtector: int = stats.get("dragon_fastest_kill_protector", 0)
        self.killsZealotBruiser: int = stats.get("kills_zealot_bruiser", 0)
        self.dragonMostDamageStrong: float = stats.get("dragon_most_damage_strong", 0)
        self.dragonHighestRank: int = stats.get("dragon_highest_rank", 0)
        self.dragonHighestRankStrong: int = stats.get("dragon_highest_rank_strong", 0)
        self.dragonFastestKillStrong: int = stats.get("dragon_fastest_kill_strong", 0)
        self.dragonMostDamageYoung: float = stats.get("dragon_most_damage_young", 0)
        self.dragonFastestKillYoung: int = stats.get("dragon_fastest_kill_young", 0)
        self.dragonMostDamageUnstable: float = stats.get("dragon_most_damage_unstable", 0)
        self.dragonFastestKillUnstable: int = stats.get("dragon_fastest_kill_unstable", 0)
        self.dragonMostDamageWise: float = stats.get("dragon_most_damage_wise", 0)
        self.dragonFastestKillWise: int = stats.get("dragon_fastest_kill_wise", 0)
        self.deathsMasterZombieLord: int = stats.get("deaths_master_zombie_lord", 0)
        self.dragonHighestRankWise: int = stats.get("dragon_highest_rank_wise", 0)
        self.dragonMostDamageSuperior: float = stats.get("dragon_most_damage_superior", 0)
        self.dragonHighestRankSuperior: int = stats.get("dragon_highest_rank_superior", 0)
        self.dragonFastestKillSuperior: int = stats.get("dragon_fastest_kill_superior", 0)
        self.dragonHighestRankOld: int = stats.get("dragon_highest_rank_old", 0)
        self.deathsPhantomSpirit: int = stats.get("deaths_phantom_spirit", 0)
        self.deathsOmegagma: int = stats.get("deaths_omegagma", 0)
        self.deathsWitherSentry: int = stats.get("deaths_wither_sentry", 0)
        self.killsTrapperHorse: int = stats.get("kills_trapper_horse", 0)
        self.deathsChaosmite: int = stats.get("deaths_chaosmite", 0)
        self.deathsBlazingGolem: int = stats.get("deaths_blazing_golem", 0)
        self.deathsMagmaBacteria: int = stats.get("deaths_magma_bacteria", 0)
        self.deathsGhast: int = stats.get("deaths_ghast", 0)
        self.dragonAmountSummoned: int = stats.get("dragon_amount_summoned", 0)
        self.dragonAmountSummonedProtector: int = stats.get("dragon_amount_summoned_protector", 0)
        self.dragonSummoningEyesContributed: int = stats.get("dragon_summoning_eyes_contributed", 0)
        self.dragonSummoningEyesContributedProtector: int = stats.get("dragon_summoning_eyes_contributed_protector", 0)
        self.dragonHighestRankProtector: int = stats.get("dragon_highest_rank_protector", 0)
        self.specialZealotLootCollected: int = stats.get("special_zealot_loot_collected", 0)
        self.killsMasterThorn: int = stats.get("kills_master_thorn", 0)
        self.deathsTrickOrTreater: int = stats.get("deaths_trick_or_treater", 0)
        self.riftVisits: int = stats.get("rift_visits", 0)
        self.riftPassConsumed: int = stats.get("rift_pass_consumed", 0)
        self.killsShame: int = stats.get("kills_shame", 0)
        self.riftLifetimeMotesEarned: float = stats.get("rift_lifetime_motes_earned", 0)
        self.riftMotesOrbPickup: int = stats.get("rift_motes_orb_pickup", 0)
        self.killsBarkingWolf: int = stats.get("kills_barking_wolf", 0)
        self.riftWoodsLarvaKilled: int = stats.get("rift_woods_larva_killed", 0)
        self.riftWoodsOdonataBottled: int = stats.get("rift_woods_odonata_bottled", 0)
        self.riftLagoonMushroomPoppedOut: int = stats.get("rift_lagoon_mushroom_popped_out", 0)
        self.killsLagoonLeech: int = stats.get("kills_lagoon_leech", 0)
        self.riftLagoonLeechSupremeKilled: int = stats.get("rift_lagoon_leech_supreme_killed", 0)
        self.killsDeadgehog: int = stats.get("kills_deadgehog", 0)
        self.killsShadow: int = stats.get("kills_shadow", 0)
        self.killsLeechSwarm: int = stats.get("kills_leech_swarm", 0)
        self.killsLeechAlpha: int = stats.get("kills_leech_alpha", 0)
        self.riftRaceBestTime: int = stats.get("rift_race_best_time", 0)
        self.riftDreadfarmCaducousHarvested: int = stats.get("rift_dreadfarm_caducous_harvested", 0)
        self.riftDreadfarmWiltedHarvested: int = stats.get("rift_dreadfarm_wilted_harvested", 0)
        self.riftWestCakePartEaten: int = stats.get("rift_west_cake_part_eaten", 0)
        self.riftWestVerminVacuumed: int = stats.get("rift_west_vermin_vacuumed", 0)
        self.riftWestVerminVacuumedSilverfish: int = stats.get("rift_west_vermin_vacuumed_silverfish", 0)
        self.riftWestVerminVacuumedMosquito: int = stats.get("rift_west_vermin_vacuumed_mosquito", 0)
        self.riftDreadfarmAgaricusHarvested: int = stats.get("rift_dreadfarm_agaricus_harvested", 0)
        self.riftDreadfarmChickenKilled: int = stats.get("rift_dreadfarm_chicken_killed", 0)
        self.killsScribe: int = stats.get("kills_scribe", 0)
        self.riftPlazaHorsezookaShot: int = stats.get("rift_plaza_horsezooka_shot", 0)
        self.riftPlazaHayDeaths: int = stats.get("rift_plaza_hay_deaths", 0)
        self.riftWestHotDogsGiven: int = stats.get("rift_west_hot_dogs_given", 0)
        self.riftWestVerminVacuumedSpider: int = stats.get("rift_west_vermin_vacuumed_spider", 0)
        self.riftDreadfarmRiftwartsHarvested: int = stats.get("rift_dreadfarm_riftwarts_harvested", 0)
        self.killsVolt: int = stats.get("kills_volt", 0)
        self.killsAutonull: int = stats.get("kills_autonull", 0)
        self.killsAutochest: int = stats.get("kills_autochest", 0)
        self.riftLivingMetalPieceMaxed: int = stats.get("rift_living_metal_piece_maxed", 0)
        self.killsAutopants: int = stats.get("kills_autopants", 0)
        self.killsAutocap: int = stats.get("kills_autocap", 0)
        self.killsAutoboots: int = stats.get("kills_autoboots", 0)
        self.killsFrozille: int = stats.get("kills_frozille", 0)
        self.riftPlazaRedLightDeaths: int = stats.get("rift_plaza_red_light_deaths", 0)
        self.riftLivingCaveSnakeCollected: int = stats.get("rift_living_cave_snake_collected", 0)
        self.riftColosseumGlobowlsAtTentacle: int = stats.get("rift_colosseum_globowls_at_tentacle", 0)
        self.killsBlobbercyst: int = stats.get("kills_blobbercyst", 0)
        self.riftColosseumBlasterShots: int = stats.get("rift_colosseum_blaster_shots", 0)
        self.killsGlobowl: int = stats.get("kills_globowl", 0)
        self.riftColosseumBacteDefeated: int = stats.get("rift_colosseum_bacte_defeated", 0)
        self.riftPoppedBalloons: int = stats.get("rift_popped_balloons", 0)
        self.killsSplatter: int = stats.get("kills_splatter", 0)
        self.killsVampireThrall: int = stats.get("kills_vampire_thrall", 0)
        self.killsVampireFledgling: int = stats.get("kills_vampire_fledgling", 0)
        self.riftCastleEffigyBroken: int = stats.get("rift_castle_effigy_broken", 0)
        self.killsClotgoyle: int = stats.get("kills_clotgoyle", 0)
        self.riftCastleSentToPrison: int = stats.get("rift_castle_sent_to_prison", 0)
        self.killsOublietteZombie: int = stats.get("kills_oubliette_zombie", 0)
        self.deathsSlime: int = stats.get("deaths_slime", 0)
        self.killsLeechSupreme: int = stats.get("kills_leech_supreme", 0)
        self.killsVampireScion: int = stats.get("kills_vampire_scion", 0)

class Bestiary: 
    def __init__(self, bestiary: dict):
        self.killsFamilyLapisZombie: int = bestiary.get("kills_family_lapis_zombie", 0)
        self.killsLapisZombie: int = bestiary.get("kills_lapis_zombie_7", 0)
        self.killsChicken: int = bestiary.get("kills_chicken_1", 0)
        self.killsCow: int = bestiary.get("kills_cow_1", 0)
        self.killsPig: int = bestiary.get("kills_pig_1", 0)
        self.killsFamilyRedstonePigman: int = bestiary.get("kills_family_redstone_pigman", 0)  
        self.killsRedstonePigman: int = bestiary.get("kills_redstone_pigman_10", 0)
        self.killsFamilyDiamondSkeleton: int = bestiary.get("kills_family_diamond_skeleton", 0)
        self.killsDiamondSkeleton: int = bestiary.get("kills_diamond_skeleton_15", 0)
        self.killsFamilyDiamondZombie: int = bestiary.get("kills_family_diamond_zombie", 0)    
        self.killsDiamondZombie: int = bestiary.get("kills_diamond_zombie_15", 0)
        self.killsDiamondZombie: int = bestiary.get("kills_diamond_zombie_20", 0)
        self.killsDiamondSkeleton: int = bestiary.get("kills_diamond_skeleton_20", 0)
        self.killsFamilyVoraciousSpider: int = bestiary.get("kills_family_voracious_spider", 0)
        self.killsVoraciousSpider: int = bestiary.get("kills_voracious_spider_10", 0)
        self.killsFamilySplitterSpider: int = bestiary.get("kills_family_splitter_spider", 0)  
        self.killsSplitterSpider: int = bestiary.get("kills_splitter_spider_2", 0)
        self.killsJockeySkeleton: int = bestiary.get("kills_jockey_skeleton_3", 0)
        self.killsFamilySpiderJockey: int = bestiary.get("kills_family_spider_jockey", 0)
        self.killsSpiderJockey: int = bestiary.get("kills_spider_jockey_3", 0)
        self.killsSplitterSpiderSilverfish: int = bestiary.get("kills_splitter_spider_silverfish_2", 0)
        self.deathsFamilyVoraciousSpider: int = bestiary.get("deaths_family_voracious_spider", 0)
        self.deathsVoraciousSpider: int = bestiary.get("deaths_voracious_spider_10", 0)
        self.killsFamilyBroodMotherSpider: int = bestiary.get("kills_family_brood_mother_spider", 0)
        self.killsBroodMotherSpider: int = bestiary.get("kills_brood_mother_spider_12", 0)
        self.killsFamilyIceWalker: int = bestiary.get("kills_family_ice_walker", 0)
        self.killsIceWalker: int = bestiary.get("kills_ice_walker_45", 0)
        self.killsFamilyEnderman: int = bestiary.get("kills_family_enderman", 0)
        self.killsEnderman: int = bestiary.get("kills_enderman_42", 0)
        self.killsSplitterSpider: int = bestiary.get("kills_splitter_spider_45", 0)
        self.deathsFamilyMagmaCube: int = bestiary.get("deaths_family_magma_cube", 0)
        self.deathsFireballMagmaCube: int = bestiary.get("deaths_fireball_magma_cube_75", 0)
        self.killsDojoKnockbackZombie: int = bestiary.get("kills_dojo_knockback_zombie_1", 0)
        self.killsDojoKnockbackZombie: int = bestiary.get("kills_dojo_knockback_zombie_2", 0)
        self.killsDojoKnockbackZombie: int = bestiary.get("kills_dojo_knockback_zombie_3", 0)
        self.killsDojoKnockbackZombie: int = bestiary.get("kills_dojo_knockback_zombie_4", 0)
        self.killsEnderman: int = bestiary.get("kills_enderman_50", 0)
        self.killsFamilyEndermite: int = bestiary.get("kills_family_endermite", 0)
        self.killsEndermite: int = bestiary.get("kills_endermite_40", 0)
        self.killsNestEndermite: int = bestiary.get("kills_nest_endermite_50", 0)
        self.deathsFamilyEndermite: int = bestiary.get("deaths_family_endermite", 0)
        self.deathsNestEndermite: int = bestiary.get("deaths_nest_endermite_50", 0)
        self.killsEndermite: int = bestiary.get("kills_endermite_37", 0)
        self.killsEnderman: int = bestiary.get("kills_enderman_45", 0)
        self.killsFamilyScaredSkeleton: int = bestiary.get("kills_family_scared_skeleton", 0)
        self.killsScaredSkeleton: int = bestiary.get("kills_scared_skeleton_42", 0)
        self.deathsFamilyCryptDreadlord: int = bestiary.get("deaths_family_crypt_dreadlord", 0)
        self.deathsCryptDreadlord: int = bestiary.get("deaths_crypt_dreadlord_47", 0)
        self.killsFamilySkeletonGrunt: int = bestiary.get("kills_family_skeleton_grunt", 0)
        self.killsSkeletonGrunt: int = bestiary.get("kills_skeleton_grunt_40", 0)
        self.killsFamilyZombieGrunt: int = bestiary.get("kills_family_zombie_grunt", 0)
        self.killsZombieGrunt: int = bestiary.get("kills_zombie_grunt_40", 0)
        self.killsFamilyDungeonRespawningSkeleton: int = bestiary.get("kills_family_dungeon_respawning_skeleton", 0)
        self.killsDungeonRespawningSkeleton: int = bestiary.get("kills_dungeon_respawning_skeleton_40", 0)
        self.deathsCryptDreadlord: int = bestiary.get("deaths_crypt_dreadlord_67", 0)
        self.deathsBonzo: int = bestiary.get("deaths_bonzo_1", 0)
        self.killsFamilyObsidianWither: int = bestiary.get("kills_family_obsidian_wither", 0)
        self.killsObsidianWither: int = bestiary.get("kills_obsidian_wither_55", 0)
        self.killsFamilyWatcher: int = bestiary.get("kills_family_watcher", 0)
        self.killsWatcher: int = bestiary.get("kills_watcher_55", 0)
        self.killsFamilyZealotEnderman: int = bestiary.get("kills_family_zealot_enderman", 0)
        self.killsZealotEnderman: int = bestiary.get("kills_zealot_enderman_55", 0)
        self.killsFamilyCorruptedProtector: int = bestiary.get("kills_family_corrupted_protector", 0)
        self.killsCorruptedProtector: int = bestiary.get("kills_corrupted_protector_100", 0)
        self.killsFamilyDragon: int = bestiary.get("kills_family_dragon", 0)
        self.killsStrongDragon: int = bestiary.get("kills_strong_dragon_100", 0)
        self.killsVoraciousSpider: int = bestiary.get("kills_voracious_spider_50", 0)
        self.killsFamilyDasherSpider: int = bestiary.get("kills_family_dasher_spider", 0)
        self.killsDasherSpider: int = bestiary.get("kills_dasher_spider_50", 0)
        self.killsFamilyArachneBrood: int = bestiary.get("kills_family_arachne_brood", 0)
        self.killsArachneBrood: int = bestiary.get("kills_arachne_brood_100", 0)
        self.killsFamilyArachne: int = bestiary.get("kills_family_arachne", 0)
        self.killsArachne: int = bestiary.get("kills_arachne_300", 0)
        self.deathsFamilyDasherSpider: int = bestiary.get("deaths_family_dasher_spider", 0)
        self.deathsDasherSpider: int = bestiary.get("deaths_dasher_spider_50", 0)
        self.killsFamilyArachneKeeper: int = bestiary.get("kills_family_arachne_keeper", 0)
        self.killsArachneKeeper: int = bestiary.get("kills_arachne_keeper_100", 0)
        self.deathsFamilyArachneBrood: int = bestiary.get("deaths_family_arachne_brood", 0)
        self.deathsArachneBrood: int = bestiary.get("deaths_arachne_brood_100", 0)
        self.killsArachne: int = bestiary.get("kills_arachne_500", 0)
        self.deathsFamilyWeaverSpider: int = bestiary.get("deaths_family_weaver_spider", 0)
        self.deathsWeaverSpider: int = bestiary.get("deaths_weaver_spider_50", 0)
        self.deathsFamilyArachneKeeper: int = bestiary.get("deaths_family_arachne_keeper", 0)
        self.deathsArachneKeeper: int = bestiary.get("deaths_arachne_keeper_100", 0)
        self.killsFamilyGoblin: int = bestiary.get("kills_family_goblin", 0)
        self.killsGoblinWeaklingMelee: int = bestiary.get("kills_goblin_weakling_melee_5", 0)
        self.killsGoblinWeaklingBow: int = bestiary.get("kills_goblin_weakling_bow_5", 0)
        self.killsGoblinCreeper: int = bestiary.get("kills_goblin_creeper_20", 0)
        self.killsPondSquid: int = bestiary.get("kills_pond_squid_1", 0)
        self.killsNightSquid: int = bestiary.get("kills_night_squid_6", 0)
        self.killsSeaGuardian: int = bestiary.get("kills_sea_guardian_10", 0)
        self.killsChickenDeep: int = bestiary.get("kills_chicken_deep_20", 0)
        self.killsSeaArcher: int = bestiary.get("kills_sea_archer_15", 0)
        self.killsSeaWalker: int = bestiary.get("kills_sea_walker_4", 0)
        self.killsSeaWitch: int = bestiary.get("kills_sea_witch_15", 0)
        self.killsCatfish: int = bestiary.get("kills_catfish_23", 0)
        self.killsGuardianDefender: int = bestiary.get("kills_guardian_defender_45", 0)
        self.killsSeaLeech: int = bestiary.get("kills_sea_leech_30", 0)
        self.killsFamilyUnburriedZombie: int = bestiary.get("kills_family_unburried_zombie", 0)
        self.killsUnburriedZombie: int = bestiary.get("kills_unburried_zombie_30", 0)
        self.killsVoraciousSpider: int = bestiary.get("kills_voracious_spider_42", 0)
        self.killsSplitterSpider: int = bestiary.get("kills_splitter_spider_42", 0)
        self.killsDasherSpider: int = bestiary.get("kills_dasher_spider_42", 0)
        self.killsFamilyWeaverSpider: int = bestiary.get("kills_family_weaver_spider", 0)
        self.killsWeaverSpider: int = bestiary.get("kills_weaver_spider_42", 0)
        self.killsSplitterSpiderSilverfish: int = bestiary.get("kills_splitter_spider_silverfish_42", 0)
        self.killsFamilyRespawningSkeleton: int = bestiary.get("kills_family_respawning_skeleton", 0)
        self.killsRespawningSkeleton: int = bestiary.get("kills_respawning_skeleton_2", 0)
        self.killsSpiderJockey: int = bestiary.get("kills_spider_jockey_42", 0)
        self.killsJockeySkeleton: int = bestiary.get("kills_jockey_skeleton_42", 0)
        self.killsFamilyTreasureHoarder: int = bestiary.get("kills_family_treasure_hoarder", 0)
        self.killsTreasureHoarder: int = bestiary.get("kills_treasure_hoarder_70", 0)
        self.killsFamilySkeleton: int = bestiary.get("kills_family_skeleton", 0)
        self.killsSkeleton: int = bestiary.get("kills_skeleton_9", 0)
        self.killsFamilyEmeraldSlime: int = bestiary.get("kills_family_emerald_slime", 0)
        self.killsEmeraldSlime: int = bestiary.get("kills_emerald_slime_5", 0)
        self.killsGoblin: int = bestiary.get("kills_goblin_50", 0)
        self.killsFamilyZombieVillager: int = bestiary.get("kills_family_zombie_villager", 0)
        self.killsZombieVillager: int = bestiary.get("kills_zombie_villager_1", 0)
        self.killsFamilyZombie: int = bestiary.get("kills_family_zombie", 0)
        self.killsZombie: int = bestiary.get("kills_zombie_1", 0)
        self.killsProtectorDragon: int = bestiary.get("kills_protector_dragon_100", 0)
        self.killsUnstableDragon: int = bestiary.get("kills_unstable_dragon_100", 0)
        self.deathsFamilyBladesoul: int = bestiary.get("deaths_family_bladesoul", 0)
        self.deathsBladesoul: int = bestiary.get("deaths_bladesoul_200", 0)
        self.killsIntroBlaze: int = bestiary.get("kills_intro_blaze_50", 0)
        self.killsFamilyBladesoul: int = bestiary.get("kills_family_bladesoul", 0)
        self.killsBladesoul: int = bestiary.get("kills_bladesoul_200", 0)
        self.deathsFamilyBlaze: int = bestiary.get("deaths_family_blaze", 0)
        self.deathsBlaze: int = bestiary.get("deaths_blaze_70", 0)
        self.deathsBezal: int = bestiary.get("deaths_bezal_80", 0)
        self.deathsMutatedBlaze: int = bestiary.get("deaths_mutated_blaze_70", 0)
        self.killsWeaverSpider: int = bestiary.get("kills_weaver_spider_50", 0)
        self.killsSplitterSpider: int = bestiary.get("kills_splitter_spider_50", 0)
        self.killsSplitterSpiderSilverfish: int = bestiary.get("kills_splitter_spider_silverfish_50", 0)
        self.killsJockeyShotSilverfish: int = bestiary.get("kills_jockey_shot_silverfish_42", 0)
        self.killsGoblinWeaklingMelee: int = bestiary.get("kills_goblin_weakling_melee_25", 0)
        self.killsGoblinKnifeThrower: int = bestiary.get("kills_goblin_knife_thrower_25", 0)
        self.killsGoblinWeaklingBow: int = bestiary.get("kills_goblin_weakling_bow_25", 0)
        self.deathsFamilyGoblin: int = bestiary.get("deaths_family_goblin", 0)
        self.deathsGoblinKnifeThrower: int = bestiary.get("deaths_goblin_knife_thrower_25", 0)
        self.killsGoblinBattler: int = bestiary.get("kills_goblin_battler_60", 0)
        self.killsGoblinGolem: int = bestiary.get("kills_goblin_golem_150", 0)
        self.killsGoblinCreepertamer: int = bestiary.get("kills_goblin_creepertamer_90", 0)
        self.killsFamilyThyst: int = bestiary.get("kills_family_thyst", 0)
        self.killsThyst: int = bestiary.get("kills_thyst_20", 0)
        self.killsFamilyWorms: int = bestiary.get("kills_family_worms", 0)
        self.killsWorm: int = bestiary.get("kills_worm_5", 0)
        self.killsFamilyTeamTreasurite: int = bestiary.get("kills_family_team_treasurite", 0)
        self.killsTeamTreasuriteGrunt: int = bestiary.get("kills_team_treasurite_grunt_50", 0)
        self.killsFamilyAutomaton: int = bestiary.get("kills_family_automaton", 0)
        self.killsAutomaton: int = bestiary.get("kills_automaton_100", 0)
        self.deathsFamilyYog: int = bestiary.get("deaths_family_yog", 0)
        self.deathsYog: int = bestiary.get("deaths_yog_100", 0)
        self.killsScatha: int = bestiary.get("kills_scatha_10", 0)
        self.killsFamilySludge: int = bestiary.get("kills_family_sludge", 0)
        self.killsSludge: int = bestiary.get("kills_sludge_10", 0)
        self.deathsKalhuikiTribeWoman: int = bestiary.get("deaths_kalhuiki_tribe_woman_100", 0)
        self.killsKeyGuardian: int = bestiary.get("kills_key_guardian_100", 0)
        self.deathsFamilyAutomaton: int = bestiary.get("deaths_family_automaton", 0)
        self.deathsAutomaton: int = bestiary.get("deaths_automaton_100", 0)
        self.killsFamilySpider: int = bestiary.get("kills_family_spider", 0)
        self.killsSpider: int = bestiary.get("kills_spider_10", 0)
        self.killsSludge: int = bestiary.get("kills_sludge_100", 0)
        self.killsRabbit: int = bestiary.get("kills_rabbit_1", 0)
        self.killsSheep: int = bestiary.get("kills_sheep_1", 0)
        self.killsFamilyRuinWolf: int = bestiary.get("kills_family_ruin_wolf", 0)
        self.killsRuinWolf: int = bestiary.get("kills_ruin_wolf_15", 0)
        self.killsUnburriedZombie: int = bestiary.get("kills_unburried_zombie_60", 0)
        self.killsFamilyOldWolf: int = bestiary.get("kills_family_old_wolf", 0)
        self.killsOldWolf: int = bestiary.get("kills_old_wolf_50", 0)
        self.deathsFamilyZealotEnderman: int = bestiary.get("deaths_family_zealot_enderman", 0)
        self.deathsZealotEnderman: int = bestiary.get("deaths_zealot_enderman_55", 0)
        self.killsOldDragon: int = bestiary.get("kills_old_dragon_100", 0)
        self.killsSuperiorDragon: int = bestiary.get("kills_superior_dragon_100", 0)
        self.killsWiseDragon: int = bestiary.get("kills_wise_dragon_100", 0)
        self.killsYoungDragon: int = bestiary.get("kills_young_dragon_100", 0)
        self.killsZealotBruiser: int = bestiary.get("kills_zealot_bruiser_100", 0)

class Perks:
    def __init__(self, perks: dict):
        self.catacombsBossLuck: int = perks.get("catacombs_boss_luck", 0)
        self.catacombsIntelligence: int = perks.get("catacombs_intelligence", 0)
        self.forbiddenBlessing: int = perks.get("forbidden_blessing", 0)        
        self.permanentIntelligence: int = perks.get("permanent_intelligence", 0)
        self.catacombsLooting: int = perks.get("catacombs_looting", 0)
        self.permanentStrength: int = perks.get("permanent_strength", 0)        
        self.permanentSpeed: int = perks.get("permanent_speed", 0)
        self.permanentDefense: int = perks.get("permanent_defense", 0)
        self.permanentHealth: int = perks.get("permanent_health", 0)
        self.catacombsDefense: int = perks.get("catacombs_defense", 0)
        self.catacombsStrength: int = perks.get("catacombs_strength", 0)        
        self.catacombsHealth: int = perks.get("catacombs_health", 0)
        self.catacombsCritDamage: int = perks.get("catacombs_crit_damage", 0)   
        self.reviveStone: int = perks.get("revive_stone", 0)
        self.flatDamageVsEnder: int = perks.get("flat_damage_vs_ender", 0)      
        self.manaAfterEnderKill: int = perks.get("mana_after_ender_kill", 0)    
        self.feroVsDragons: int = perks.get("fero_vs_dragons", 0)
        self.combatWisdomInEnd: int = perks.get("combat_wisdom_in_end", 0)
        self.incZealotsOdds: int = perks.get("inc_zealots_odds", 0)
        self.edragCd: int = perks.get("edrag_cd", 0)
        self.dragonReforgesBuff: int = perks.get("dragon_reforges_buff", 0)
        self.increasedSupChances: int = perks.get("increased_sup_chances", 0)
        self.empoweredAgility: int = perks.get("empowered_agility", 0)
        self.verminControl: int = perks.get("vermin_control", 0)
        self.bane: int = perks.get("bane", 0)
        self.spiderTraining: int = perks.get("spider_training", 0)
        self.coldEfficiency: int = perks.get("cold_efficiency", 0)
        self.cooledForges: int = perks.get("cooled_forges", 0)
        self.frozenSkin: int = perks.get("frozen_skin", 0)
        self.seasonOfJoy: int = perks.get("season_of_joy", 0)
        self.headstartKuudra: int = perks.get("headstart_kuudra", 0)
        self.masterKuudra: int = perks.get("master_kuudra", 0)
        self.freshToolsKuudra: int = perks.get("fresh_tools_kuudra", 0)
        self.strongarmKuudra: int = perks.get("strongarm_kuudra", 0)
        self.fungusFortuna: int = perks.get("fungus_fortuna", 0)
        self.harenaFortuna: int = perks.get("harena_fortuna", 0)
        self.witherPiper: int = perks.get("wither_piper", 0)
        self.crimsonTraining: int = perks.get("crimson_training", 0)

class AccessoryBag:
    def __init__(self, accessoryBag: dict):
        self.unlockedPowers: list[str] = [power for power in accessoryBag.get("unlocked_powers", [])]
        self.selectedPower: str = accessoryBag.get("selected_power", None)
        self.bagUpgrades: int = accessoryBag.get("bag_upgrades_purchased", 0)
        self.highestMagicPower: int = accessoryBag.get("highest_magical_power", 0)

class Leveling:
    def __init__(self, leveling: dict):
        self.exp: int = leveling.get("experience", 0)
        self.nucleusRuns: int = leveling.get("completions", {}).get("NUCLEUS_RUNS", 0)
        self.completedTasks: list[str] = [task for task in leveling.get("completed_tasks", [])]
        self.highestPetScore: int = leveling.get("highest_pet_score", 0)
        self.miningFiestaOresMined: int = leveling.get("mining_fiesta_ores_mined", 0)
        self.fishingFiestaSharksKilled: int = leveling.get("fishing_festival_sharks_killed", 0)

class Mining:
    def __init__(self, mining: dict):
        self.nodes: Nodes = Nodes(mining.get("nodes", {}))
        self.tokens: int = mining.get("tokens", 0)
        self.mithrilPowder: int = mining.get("powder_mithril", 0)
        self.totalMithrilPowder: int = mining.get("powder_mithril_total", 0)
        self.gemstonePowder: int = mining.get("powder_gemstone", 0)
        self.totalGemstonePowder: int = mining.get("powder_gemstone_total", 0)
        self.exp: int = mining.get("experience", 0)

class Nodes:
    def __init__(self, nodes: dict):
        self.special: int = nodes.get("special_0", 0)
        self.miningSpeed: int = nodes.get("mining_speed", 0)
        self.miningFortune: int = nodes.get("mining_fortune", 0)       
        self.titaniumInsanium: int = nodes.get("titanium_insanium", 0) 
        self.miningSpeedBoost: int = nodes.get("mining_speed_boost", 0)
        self.randomEvent: int = nodes.get("random_event", 0)
        self.miningMadness: int = nodes.get("mining_madness", 0)       
        self.goblinKiller: int = nodes.get("goblin_killer", 0)
        self.lonesomeMiner: int = nodes.get("lonesome_miner", 0)       
        self.miningSpeed: int = nodes.get("mining_speed_2", 0)
        self.dailyPowder: int = nodes.get("daily_powder", 0)
        self.efficientMiner: int = nodes.get("efficient_miner", 0)     
        self.mole: int = nodes.get("mole", 0)
        self.fortunate: int = nodes.get("fortunate", 0)
        self.greatExplorer: int = nodes.get("great_explorer", 0)       
        self.miningFortune: int = nodes.get("mining_fortune_2", 0)     
        self.veinSeeker: int = nodes.get("vein_seeker", 0)
        self.dailyEffect: int = nodes.get("daily_effect", 0)


class TrophyFishes:
    def __init__(self, trophyFishes: dict):
        self.total: int = trophyFishes.get("total_caught", 0)
        self.gusher: TrophyFish = TrophyFish("gusher", trophyFishes)
        self.blobFish: TrophyFish = TrophyFish("blobfish", trophyFishes)
        self.volcanicStoneFish: TrophyFish = TrophyFish("volcanic_stone_fish", trophyFishes)
        self.karateFish: TrophyFish = TrophyFish("karate_fish", trophyFishes)
        self.vanille: TrophyFish = TrophyFish("vanille", trophyFishes)
        self.lavaHorse: TrophyFish = TrophyFish("lava_horse", trophyFishes)
        self.manaRay: TrophyFish = TrophyFish("mana_ray", trophyFishes)
        self.flyFish: TrophyFish = TrophyFish("fly_fish", trophyFishes)
        self.goldenFish: TrophyFish = TrophyFish("golden_fish", trophyFishes)
        self.obfuscatedFishOne: TrophyFish = TrophyFish("obfuscated_fish_1", trophyFishes)
        self.obfuscatedFishTwo: TrophyFish = TrophyFish("obfuscated_fish_2", trophyFishes)
        self.obfuscatedFishThree: TrophyFish = TrophyFish("obfuscated_fish_3", trophyFishes)
        self.steamingHotFlounder: TrophyFish = TrophyFish("steaming_hot_flounder", trophyFishes)
        self.slugfish: TrophyFish = TrophyFish("slugfish", trophyFishes)
        self.sulphurSkitter: TrophyFish = TrophyFish("sulphur_skitter", trophyFishes)
        self.moldfin: TrophyFish = TrophyFish("moldfin", trophyFishes)
        self.soulFish: TrophyFish = TrophyFish("soul_fish", trophyFishes)

class TrophyFish:
    def __init__(self, fishName: str, trophyFish: dict):
        self.total: int = trophyFish.get(fishName, 0)
        self.bronze: int = trophyFish.get(fishName+"_bronze", 0)
        self.silver: int = trophyFish.get(fishName+"_silver", 0)
        self.gold: int = trophyFish.get(fishName+"_gold", 0)
        self.diamond: int = trophyFish.get(fishName+"_diamond", 0)

class SkillExperience:
    def __init__(self, skills: dict):
        self.runeCrafting: int = skills.get("experience_skill_runecrafting", 0)
        self.mining: int = skills.get("experience_skill_mining", 0)
        self.alchemy: int = skills.get("experience_skill_alchemy", 0)
        self.taming: int = skills.get("experience_skill_taming", 0)
        self.combat: int = skills.get("experience_skill_combat", 0)
        self.social: int = skills.get("experience_skill_social2", 0)
        self.enchanting: int = skills.get("experience_skill_enchanting", 0)
        self.fishing: int = skills.get("experience_skill_fishing", 0)
        self.foraging: int = skills.get("experience_skill_foraging", 0)
        self.carpentry: int = skills.get("experience_skill_carpentry", 0)
        

class Equipment:
    def __init__(self, equipment: dict):
        self.equipment: str = equipment.get("data", None)

class Backpack:
    def __init__(self, backpack: dict):
        self.data: str = backpack.get("data", None)

class Quiver: # Unused
    def __init__(self, quiver: dict):
        self.data: str = quiver.get("data", None)

class TalismanBag:
    def __init__(self, talismanBag: dict):
        self.data: str = talismanBag.get("data", None)

class FishingBag: # Unused
    def __init__(self, fishingBag: dict):
        self.data: str = fishingBag.get("data", None)

class EnderChest:
    def __init__(self, enderChest: dict):
        self.data: str = enderChest.get("data", None)

class Wardrobe:
    def __init__(self, wardrobe: dict):
        self.data: str = wardrobe.get("data", None)

class PotionBag: # Unused
    def __init__(self, potionBag: dict):
        self.data: str = potionBag.get("data", None)

class PersonalVault:
    def __init__(self, personalVault: dict):
        self.data: str = personalVault.get("data", None)

class Inventory:
    def __init__(self, inventory: dict):
        self.data: str = inventory.get("data", None)

class CandyInventory: # Unused
    def __init__(self, candyInventory: dict):
        self.data: str = candyInventory.get("data", None)

class Essence:
    def __init__(self, essences: dict):
        self.undead: int = essences.get("essence_undead", 0)
        self.crimson: int = essences.get("essence_crimson", 0)
        self.diamond: int = essences.get("essence_diamond", 0)
        self.dragon: int = essences.get("essence_dragon", 0)
        self.gold: int = essences.get("essence_gold", 0)
        self.ice: int = essences.get("essence_ice", 0)
        self.wither: int = essences.get("essence_wither", 0)
        self.spider: int = essences.get("essence_spider", 0)

class ProfileMember:
    def __init__(self, uuid: str, profileMember: dict):
        self.uuid: str = uuid if not None else None
        self.fairyExchanges: int = profileMember.get("fairy_exchanges", None)
        self.fishingTreasureCaught: int = profileMember.get("fishing_treasure_caught", 0)
        self.activeEffects: list = profileMember.get("active_effects", [])
        self.deaths: int = profileMember.get("death_count", 0)
        self.fairySouls: int = profileMember.get("fairy_souls_collected", 0)
        self.purse: int = profileMember.get("coin_purse", 0)
        self.joined: int = profileMember.get("first_join", 0)
        self.soulflow: int = profileMember.get("soulflow", 0)
        self.pets: list[Pet] = [Pet(pet) for pet in profileMember.get("pets", {})]
        self.dungeons: Dungeons = Dungeons(profileMember.get("dungeons", {}))
        self.crimsonIsles: CrimsonIsles = CrimsonIsles(profileMember.get("nether_island_player_data", {}))
        self.stats: Stats = Stats(profileMember.get("stats", {}))
        self.bestiary: Bestiary = Bestiary(profileMember.get("bestiary", {}))
        self.perks: Perks = Perks(profileMember.get("perks", {}))
        self.armor: str = profileMember.get("inv_armor", None)
        self.accessoryBag: AccessoryBag = AccessoryBag(profileMember.get("accessory_bag_storage", {}))
        self.leveling: Leveling = Leveling(profileMember.get("leveling", {}))
        self.minionsCrafted: list[str] = [minion for minion in profileMember.get("crafted_generators", [])]
        self.pelts: int = profileMember.get("trapper_quest", {}).get("pelt_count", 0)
        self.mining: Mining = Mining(profileMember.get("mining_core", {}))
        self.trophyFish: TrophyFishes = TrophyFishes(profileMember.get("trophy_fish", {}))
        self.backpacks: list[Backpack] = [Backpack(backpack) for backpack in profileMember.get("backpack_contents", {}).values()]
        self.equipment: Equipment = Equipment(profileMember.get("equippment_contents" ,{}))
        self.talismanBag: TalismanBag = TalismanBag(profileMember.get("talisman_bag" ,{}))
        self.enderChest: EnderChest = EnderChest(profileMember.get("ender_chest_contents" ,{}))
        self.wardrobe: Wardrobe = Wardrobe(profileMember.get("wardrobe_contents" ,{}))
        self.personalVault: PersonalVault = PersonalVault(profileMember.get("personal_vault_contents" ,{}))
        self.inventory: Inventory = Inventory(profileMember.get("inv_contents" ,{}))
        self.skillExp: SkillExperience = SkillExperience(profileMember)
        self.essence: Essence = Essence(profileMember)
        self.mode: str = profileMember.get("game_mode", None)
        self.name: str = profileMember.get("cute_name", None)
        self.selected: bool = profileMember.get("cute_name", False)
        self.slayer: Slayer = Slayer(profileMember.get("slayer_bosses", {}))
        self.jacob: Jacob = Jacob(profileMember.get("jacob2", {}))


class SkyblockProfile:
    def __init__(self, profile: dict):
        self.profileId: int = profile.get("profile_id", 0)
        self.communityUpgrades: CommunityUpgrades = CommunityUpgrades(profile.get("community_upgrades", 0))
        self.bankBalance: int = profile.get("banking", {}).get("balance", 0)
        self.members: list[ProfileMember]|list = [ProfileMember(
            uuid = uuid, profileMember = member
            ) for uuid, member in profile.get("members", {}).items()]
        
    def get_member(self, uuid: str) -> ProfileMember:
        return [member for member in self.members if member.uuid == uuid][0]
